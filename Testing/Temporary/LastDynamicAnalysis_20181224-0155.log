Start testing: Dec 24 05:05 MSK
----------------------------------------------------------
1/32 Testing: graph_/home/tna0y/Desktop/Compiler/tests/examples/test_factorial
1/32 Test: graph_/home/tna0y/Desktop/Compiler/tests/examples/test_factorial
Command: "/usr/bin/valgrind" "--log-file=/home/tna0y/Desktop/Compiler/Testing/Temporary/MemoryChecker.1.log" "-q" "--tool=memcheck" "--leak-check=yes" "--show-reachable=yes" "--num-callers=50" "/home/tna0y/Desktop/Compiler/tests/examples/build_graph.sh" "/home/tna0y/Desktop/Compiler/tests/examples/test_factorial"
Directory: /home/tna0y/Desktop/Compiler
"graph_/home/tna0y/Desktop/Compiler/tests/examples/test_factorial" start time: Dec 24 05:05 MSK
Output:
----------------------------------------------------------
mkdir: cannot create directory ‘/home/tna0y/Desktop/Compiler/tests/examples/test_factorial/IR’: File exists
classspace
id: Factorial
ID:Factorial
space
unknown symbol: {
space
publicspace
space
space
main
unknown symbol: (
unknown symbol: [
unknown symbol: ]
space
id: a
ID:a
unknown symbol: )
space
unknown symbol: {
space
unknown symbol: (
space
id: Fac
ID:Fac
unknown symbol: (
unknown symbol: )
unknown symbol: .
id: ComputeFac
ID:ComputeFac
unknown symbol: (
num: 10
unknown symbol: )
unknown symbol: )
unknown symbol: ;
space
unknown symbol: }
Empty statement List
unknown symbol: }
mainClass
classspace
id: Fac
ID:Fac
space
unknown symbol: {
space
publicspace
intspace
id: ComputeFac
ID:ComputeFac
unknown symbol: (
intspace
id: num
ID:num
unknown symbol: )
space
unknown symbol: {
space
intspace
id: num_aux
ID:num_aux
unknown symbol: ;
VarDecl

space
space
unknown symbol: (
id: num
ID:num
expr-id
space
unknown symbol: <
space
num: 1
unknown symbol: )
space
id: num_aux
ID:num_aux
space
unknown symbol: =
space
num: 1
unknown symbol: ;
ex=ex
space
space
id: num_aux
ID:num_aux
space
unknown symbol: =
space
id: num
ID:num
expr-id
space
unknown symbol: *
space
unknown symbol: (
unknown symbol: .
id: ComputeFac
ID:ComputeFac
unknown symbol: (
id: num
ID:num
expr-id
unknown symbol: -
num: 1
unknown symbol: )
unknown symbol: )
unknown symbol: ;
ex=ex
space
Empty statement List
space
id: num_aux
ID:num_aux
expr-id
unknown symbol: ;
space
unknown symbol: }
unknown symbol: }

TableBuilder:
<end of output>
Test time =   0.83 sec
----------------------------------------------------------
Test Passed.
"graph_/home/tna0y/Desktop/Compiler/tests/examples/test_factorial" end time: Dec 24 05:05 MSK
"graph_/home/tna0y/Desktop/Compiler/tests/examples/test_factorial" time elapsed: 00:00:00
----------------------------------------------------------

2/32 Testing: graph_/home/tna0y/Desktop/Compiler/tests/examples/test_linked_list
2/32 Test: graph_/home/tna0y/Desktop/Compiler/tests/examples/test_linked_list
Command: "/usr/bin/valgrind" "--log-file=/home/tna0y/Desktop/Compiler/Testing/Temporary/MemoryChecker.2.log" "-q" "--tool=memcheck" "--leak-check=yes" "--show-reachable=yes" "--num-callers=50" "/home/tna0y/Desktop/Compiler/tests/examples/build_graph.sh" "/home/tna0y/Desktop/Compiler/tests/examples/test_linked_list"
Directory: /home/tna0y/Desktop/Compiler
"graph_/home/tna0y/Desktop/Compiler/tests/examples/test_linked_list" start time: Dec 24 05:05 MSK
Output:
----------------------------------------------------------
mkdir: cannot create directory ‘/home/tna0y/Desktop/Compiler/tests/examples/test_linked_list/IR’: File exists
classspace
id: LinkedList
ID:LinkedList
unknown symbol: {
space
publicspace
space
space
main
unknown symbol: (
unknown symbol: [
unknown symbol: ]
space
id: a
ID:a
unknown symbol: )
unknown symbol: {
space
unknown symbol: (
space
id: LL
ID:LL
unknown symbol: (
unknown symbol: )
unknown symbol: .
id: Start
ID:Start
unknown symbol: (
unknown symbol: )
unknown symbol: )
unknown symbol: ;
space
unknown symbol: }
Empty statement List
unknown symbol: }
mainClass
space
classspace
id: Element
ID:Element
space
unknown symbol: {
space
intspace
id: Age
ID:Age
space
unknown symbol: ;
VarDecl

space
intspace
id: Salary
ID:Salary
space
unknown symbol: ;
VarDecl

space
space
id: Married
ID:Married
space
unknown symbol: ;
VarDecl

space
space
publicspace
space
id: Init
ID:Init
unknown symbol: (
intspace
id: v_Age
ID:v_Age
unknown symbol: ,
space
intspace
id: v_Salary
ID:v_Salary
ArgList
unknown symbol: ,
space
space
id: v_Married
ID:v_Married
ArgList
unknown symbol: )
unknown symbol: {
space
id: Age
ID:Age
space
unknown symbol: =
space
id: v_Age
ID:v_Age
expr-id
space
unknown symbol: ;
ex=ex
space
id: Salary
ID:Salary
space
unknown symbol: =
space
id: v_Salary
ID:v_Salary
expr-id
space
unknown symbol: ;
ex=ex
space
id: Married
ID:Married
space
unknown symbol: =
space
id: v_Married
ID:v_Married
expr-id
space
unknown symbol: ;
ex=ex
space
Empty statement List
space
space
unknown symbol: ;
space
unknown symbol: }
space
publicspace
intspace
id: GetAge
ID:GetAge
unknown symbol: (
unknown symbol: )
unknown symbol: {
space
Empty statement List
space
id: Age
ID:Age
expr-id
space
unknown symbol: ;
space
unknown symbol: }
space
publicspace
intspace
id: GetSalary
ID:GetSalary
unknown symbol: (
unknown symbol: )
unknown symbol: {
space
Empty statement List
space
id: Salary
ID:Salary
expr-id
space
unknown symbol: ;
space
unknown symbol: }
space
publicspace
space
id: GetMarried
ID:GetMarried
unknown symbol: (
unknown symbol: )
unknown symbol: {
space
Empty statement List
space
id: Married
ID:Married
expr-id
space
unknown symbol: ;
space
unknown symbol: }
space
space
space
publicspace
space
id: Equal
ID:Equal
unknown symbol: (
id: Element
ID:Element
space
id: other
ID:other
unknown symbol: )
unknown symbol: {
space
space
id: ret_val
ID:ret_val
space
unknown symbol: ;
VarDecl

space
intspace
id: aux01
ID:aux01
space
unknown symbol: ;
VarDecl

space
intspace
id: aux02
ID:aux02
space
unknown symbol: ;
VarDecl

space
intspace
id: nt
ID:nt
space
unknown symbol: ;
VarDecl

space
id: ret_val
ID:ret_val
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
id: aux01
ID:aux01
space
unknown symbol: =
space
id: other
ID:other
expr-id
unknown symbol: .
id: GetAge
ID:GetAge
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
space
unknown symbol: (
unknown symbol: !
unknown symbol: (
unknown symbol: .
id: Compare
ID:Compare
unknown symbol: (
id: aux01
ID:aux01
expr-id
unknown symbol: ,
id: Age
ID:Age
expr-id
unknown symbol: )
unknown symbol: )
unknown symbol: )
space
id: ret_val
ID:ret_val
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
space
unknown symbol: {
space
id: aux02
ID:aux02
space
unknown symbol: =
space
id: other
ID:other
expr-id
unknown symbol: .
id: GetSalary
ID:GetSalary
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
space
unknown symbol: (
unknown symbol: !
unknown symbol: .
id: Compare
ID:Compare
unknown symbol: (
id: aux02
ID:aux02
expr-id
unknown symbol: ,
id: Salary
ID:Salary
expr-id
unknown symbol: )
unknown symbol: )
space
id: ret_val
ID:ret_val
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
space
space
unknown symbol: (
id: Married
ID:Married
expr-id
unknown symbol: )
space
space
unknown symbol: (
unknown symbol: !
id: other
ID:other
expr-id
unknown symbol: .
id: GetMarried
ID:GetMarried
unknown symbol: (
unknown symbol: )
unknown symbol: )
space
id: ret_val
ID:ret_val
space
unknown symbol: =
space
unknown symbol: ;
ex=ex
space
space
id: nt
ID:nt
space
unknown symbol: =
space
num: 0
space
unknown symbol: ;
ex=ex
space
space
space
unknown symbol: (
id: other
ID:other
expr-id
unknown symbol: .
id: GetMarried
ID:GetMarried
unknown symbol: (
unknown symbol: )
unknown symbol: )
space
id: ret_val
ID:ret_val
space
unknown symbol: =
space
unknown symbol: ;
ex=ex
space
space
id: nt
ID:nt
space
unknown symbol: =
space
num: 0
space
unknown symbol: ;
ex=ex
space
unknown symbol: }
Empty statement List
space
Empty statement List
space
id: ret_val
ID:ret_val
expr-id
space
unknown symbol: ;
space
unknown symbol: }
space
space
space
space
publicspace
space
id: Compare
ID:Compare
unknown symbol: (
intspace
id: num1
ID:num1
space
unknown symbol: ,
space
intspace
id: num2
ID:num2
ArgList
unknown symbol: )
unknown symbol: {
space
space
id: retval
ID:retval
space
unknown symbol: ;
VarDecl

space
intspace
id: aux02
ID:aux02
space
unknown symbol: ;
VarDecl

space
id: retval
ID:retval
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
id: aux02
ID:aux02
space
unknown symbol: =
space
id: num2
ID:num2
expr-id
space
unknown symbol: +
space
num: 1
space
unknown symbol: ;
ex=ex
space
space
unknown symbol: (
id: num1
ID:num1
expr-id
space
unknown symbol: <
space
id: num2
ID:num2
expr-id
unknown symbol: )
space
id: retval
ID:retval
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
space
space
unknown symbol: (
unknown symbol: !
unknown symbol: (
id: num1
ID:num1
expr-id
space
unknown symbol: <
space
id: aux02
ID:aux02
expr-id
unknown symbol: )
unknown symbol: )
space
id: retval
ID:retval
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
space
id: retval
ID:retval
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
Empty statement List
space
id: retval
ID:retval
expr-id
space
unknown symbol: ;
space
unknown symbol: }
space
unknown symbol: }
space
classspace
id: List
ID:List
unknown symbol: {
space
id: Element
ID:Element
space
id: elem
ID:elem
space
unknown symbol: ;
VarDecl

space
id: List
ID:List
space
id: next
ID:next
space
unknown symbol: ;
VarDecl

space
space
id: end
ID:end
space
unknown symbol: ;
VarDecl

space
space
publicspace
space
id: Init
ID:Init
unknown symbol: (
unknown symbol: )
unknown symbol: {
space
id: end
ID:end
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
Empty statement List
space
space
unknown symbol: ;
space
unknown symbol: }
space
space
publicspace
space
id: InitNew
ID:InitNew
unknown symbol: (
id: Element
ID:Element
space
id: v_elem
ID:v_elem
unknown symbol: ,
space
id: List
ID:List
space
id: v_next
ID:v_next
ArgList
unknown symbol: ,
space
space
id: v_end
ID:v_end
ArgList
unknown symbol: )
unknown symbol: {
space
id: end
ID:end
space
unknown symbol: =
space
id: v_end
ID:v_end
expr-id
space
unknown symbol: ;
ex=ex
space
id: elem
ID:elem
space
unknown symbol: =
space
id: v_elem
ID:v_elem
expr-id
space
unknown symbol: ;
ex=ex
space
id: next
ID:next
space
unknown symbol: =
space
id: v_next
ID:v_next
expr-id
space
unknown symbol: ;
ex=ex
space
Empty statement List
space
space
unknown symbol: ;
space
unknown symbol: }
space
space
publicspace
id: List
ID:List
space
id: Insert
ID:Insert
unknown symbol: (
id: Element
ID:Element
space
id: new_elem
ID:new_elem
unknown symbol: )
unknown symbol: {
space
space
id: ret_val
ID:ret_val
space
unknown symbol: ;
VarDecl

space
id: List
ID:List
space
id: aux03
ID:aux03
space
unknown symbol: ;
VarDecl

space
id: List
ID:List
space
id: aux02
ID:aux02
space
unknown symbol: ;
VarDecl

space
id: aux03
ID:aux03
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
id: aux02
ID:aux02
space
unknown symbol: =
space
space
id: List
ID:List
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: ret_val
ID:ret_val
space
unknown symbol: =
space
id: aux02
ID:aux02
expr-id
unknown symbol: .
id: InitNew
ID:InitNew
unknown symbol: (
id: new_elem
ID:new_elem
expr-id
unknown symbol: ,
id: aux03
ID:aux03
expr-id
unknown symbol: ,
unknown symbol: )
unknown symbol: ;
ex=ex
space
Empty statement List
space
id: aux02
ID:aux02
expr-id
space
unknown symbol: ;
space
unknown symbol: }
space
space
publicspace
space
id: SetNext
ID:SetNext
unknown symbol: (
id: List
ID:List
space
id: v_next
ID:v_next
unknown symbol: )
unknown symbol: {
space
id: next
ID:next
space
unknown symbol: =
space
id: v_next
ID:v_next
expr-id
space
unknown symbol: ;
ex=ex
space
Empty statement List
space
space
unknown symbol: ;
space
unknown symbol: }
space
space
publicspace
id: List
ID:List
space
id: Delete
ID:Delete
unknown symbol: (
id: Element
ID:Element
space
id: e
ID:e
unknown symbol: )
unknown symbol: {
space
id: List
ID:List
space
id: my_head
ID:my_head
space
unknown symbol: ;
VarDecl

space
space
id: ret_val
ID:ret_val
space
unknown symbol: ;
VarDecl

space
space
id: aux05
ID:aux05
unknown symbol: ;
VarDecl

space
id: List
ID:List
space
id: aux01
ID:aux01
space
unknown symbol: ;
VarDecl

space
id: List
ID:List
space
id: prev
ID:prev
space
unknown symbol: ;
VarDecl

space
space
id: var_end
ID:var_end
space
unknown symbol: ;
VarDecl

space
id: Element
ID:Element
space
id: var_elem
ID:var_elem
space
unknown symbol: ;
VarDecl

space
intspace
id: aux04
ID:aux04
space
unknown symbol: ;
VarDecl

space
intspace
id: nt
ID:nt
space
unknown symbol: ;
VarDecl

space
id: my_head
ID:my_head
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
id: ret_val
ID:ret_val
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
id: aux04
ID:aux04
space
unknown symbol: =
space
num: 0
space
unknown symbol: -
space
num: 1
space
unknown symbol: ;
ex=ex
space
id: aux01
ID:aux01
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
id: prev
ID:prev
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
id: var_end
ID:var_end
space
unknown symbol: =
space
id: end
ID:end
expr-id
unknown symbol: ;
ex=ex
space
id: var_elem
ID:var_elem
space
unknown symbol: =
space
id: elem
ID:elem
expr-id
space
unknown symbol: ;
ex=ex
space
space
unknown symbol: (
unknown symbol: (
unknown symbol: !
id: var_end
ID:var_end
expr-id
unknown symbol: )
space
space
unknown symbol: (
unknown symbol: !
id: ret_val
ID:ret_val
expr-id
unknown symbol: )
unknown symbol: )
unknown symbol: {
space
space
unknown symbol: (
id: e
ID:e
expr-id
unknown symbol: .
id: Equal
ID:Equal
unknown symbol: (
id: var_elem
ID:var_elem
expr-id
unknown symbol: )
unknown symbol: )
unknown symbol: {
space
id: ret_val
ID:ret_val
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
space
unknown symbol: (
id: aux04
ID:aux04
expr-id
space
unknown symbol: <
space
num: 0
unknown symbol: )
space
unknown symbol: {
space
space
id: my_head
ID:my_head
space
unknown symbol: =
space
id: aux01
ID:aux01
expr-id
unknown symbol: .
id: GetNext
ID:GetNext
unknown symbol: (
unknown symbol: )
space
unknown symbol: ;
ex=ex
space
unknown symbol: }
Empty statement List
space
unknown symbol: {
space
space
unknown symbol: (
num: 0
unknown symbol: -
num: 555
unknown symbol: )
unknown symbol: ;
space
id: aux05
ID:aux05
space
unknown symbol: =
space
id: prev
ID:prev
expr-id
unknown symbol: .
id: SetNext
ID:SetNext
unknown symbol: (
id: aux01
ID:aux01
expr-id
unknown symbol: .
id: GetNext
ID:GetNext
unknown symbol: (
unknown symbol: )
unknown symbol: )
unknown symbol: ;
ex=ex
space
unknown symbol: (
num: 0
unknown symbol: -
num: 555
unknown symbol: )
unknown symbol: ;
space
unknown symbol: }
Empty statement List
space
unknown symbol: }
Empty statement List
space
space
id: nt
ID:nt
space
unknown symbol: =
space
num: 0
space
unknown symbol: ;
ex=ex
space
space
unknown symbol: (
unknown symbol: !
id: ret_val
ID:ret_val
expr-id
unknown symbol: )
unknown symbol: {
space
id: prev
ID:prev
space
unknown symbol: =
space
id: aux01
ID:aux01
expr-id
space
unknown symbol: ;
ex=ex
space
id: aux01
ID:aux01
space
unknown symbol: =
space
id: aux01
ID:aux01
expr-id
unknown symbol: .
id: GetNext
ID:GetNext
unknown symbol: (
unknown symbol: )
space
unknown symbol: ;
ex=ex
space
id: var_end
ID:var_end
space
unknown symbol: =
space
id: aux01
ID:aux01
expr-id
unknown symbol: .
id: GetEnd
ID:GetEnd
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: var_elem
ID:var_elem
space
unknown symbol: =
space
id: aux01
ID:aux01
expr-id
unknown symbol: .
id: GetElem
ID:GetElem
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: aux04
ID:aux04
space
unknown symbol: =
space
num: 1
space
unknown symbol: ;
ex=ex
space
unknown symbol: }
Empty statement List
space
space
id: nt
ID:nt
space
unknown symbol: =
space
num: 0
space
unknown symbol: ;
ex=ex
space
unknown symbol: }
Empty statement List
space
Empty statement List
space
id: my_head
ID:my_head
expr-id
space
unknown symbol: ;
space
unknown symbol: }
space
space
publicspace
intspace
id: Search
ID:Search
unknown symbol: (
id: Element
ID:Element
space
id: e
ID:e
unknown symbol: )
unknown symbol: {
space
intspace
id: int_ret_val
ID:int_ret_val
space
unknown symbol: ;
VarDecl

space
id: List
ID:List
space
id: aux01
ID:aux01
space
unknown symbol: ;
VarDecl

space
id: Element
ID:Element
space
id: var_elem
ID:var_elem
space
unknown symbol: ;
VarDecl

space
space
id: var_end
ID:var_end
space
unknown symbol: ;
VarDecl

space
intspace
id: nt
ID:nt
space
unknown symbol: ;
VarDecl

space
id: int_ret_val
ID:int_ret_val
space
unknown symbol: =
space
num: 0
space
unknown symbol: ;
ex=ex
space
id: aux01
ID:aux01
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
id: var_end
ID:var_end
space
unknown symbol: =
space
id: end
ID:end
expr-id
unknown symbol: ;
ex=ex
space
id: var_elem
ID:var_elem
space
unknown symbol: =
space
id: elem
ID:elem
expr-id
space
unknown symbol: ;
ex=ex
space
space
unknown symbol: (
unknown symbol: !
id: var_end
ID:var_end
expr-id
unknown symbol: )
unknown symbol: {
space
space
unknown symbol: (
id: e
ID:e
expr-id
unknown symbol: .
id: Equal
ID:Equal
unknown symbol: (
id: var_elem
ID:var_elem
expr-id
unknown symbol: )
unknown symbol: )
unknown symbol: {
space
id: int_ret_val
ID:int_ret_val
space
unknown symbol: =
space
num: 1
space
unknown symbol: ;
ex=ex
space
unknown symbol: }
Empty statement List
space
space
id: nt
ID:nt
space
unknown symbol: =
space
num: 0
space
unknown symbol: ;
ex=ex
space
id: aux01
ID:aux01
space
unknown symbol: =
space
id: aux01
ID:aux01
expr-id
unknown symbol: .
id: GetNext
ID:GetNext
unknown symbol: (
unknown symbol: )
space
unknown symbol: ;
ex=ex
space
id: var_end
ID:var_end
space
unknown symbol: =
space
id: aux01
ID:aux01
expr-id
unknown symbol: .
id: GetEnd
ID:GetEnd
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: var_elem
ID:var_elem
space
unknown symbol: =
space
id: aux01
ID:aux01
expr-id
unknown symbol: .
id: GetElem
ID:GetElem
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
unknown symbol: }
Empty statement List
space
Empty statement List
space
id: int_ret_val
ID:int_ret_val
expr-id
space
unknown symbol: ;
space
unknown symbol: }
space
publicspace
space
id: GetEnd
ID:GetEnd
unknown symbol: (
unknown symbol: )
unknown symbol: {
space
Empty statement List
space
id: end
ID:end
expr-id
space
unknown symbol: ;
space
unknown symbol: }
space
publicspace
id: Element
ID:Element
space
id: GetElem
ID:GetElem
unknown symbol: (
unknown symbol: )
unknown symbol: {
space
Empty statement List
space
id: elem
ID:elem
expr-id
space
unknown symbol: ;
space
unknown symbol: }
space
publicspace
id: List
ID:List
space
id: GetNext
ID:GetNext
unknown symbol: (
unknown symbol: )
unknown symbol: {
space
Empty statement List
space
id: next
ID:next
expr-id
space
unknown symbol: ;
space
unknown symbol: }
space
space
publicspace
space
id: Print
ID:Print
unknown symbol: (
unknown symbol: )
unknown symbol: {
space
id: List
ID:List
space
id: aux01
ID:aux01
space
unknown symbol: ;
VarDecl

space
space
id: var_end
ID:var_end
space
unknown symbol: ;
VarDecl

space
id: Element
ID:Element
space
id: var_elem
ID:var_elem
space
unknown symbol: ;
VarDecl

space
id: aux01
ID:aux01
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
id: var_end
ID:var_end
space
unknown symbol: =
space
id: end
ID:end
expr-id
space
unknown symbol: ;
ex=ex
space
id: var_elem
ID:var_elem
space
unknown symbol: =
space
id: elem
ID:elem
expr-id
space
unknown symbol: ;
ex=ex
space
space
unknown symbol: (
unknown symbol: !
id: var_end
ID:var_end
expr-id
unknown symbol: )
unknown symbol: {
space
unknown symbol: (
id: var_elem
ID:var_elem
expr-id
unknown symbol: .
id: GetAge
ID:GetAge
unknown symbol: (
unknown symbol: )
unknown symbol: )
unknown symbol: ;
space
id: aux01
ID:aux01
space
unknown symbol: =
space
id: aux01
ID:aux01
expr-id
unknown symbol: .
id: GetNext
ID:GetNext
unknown symbol: (
unknown symbol: )
space
unknown symbol: ;
ex=ex
space
id: var_end
ID:var_end
space
unknown symbol: =
space
id: aux01
ID:aux01
expr-id
unknown symbol: .
id: GetEnd
ID:GetEnd
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: var_elem
ID:var_elem
space
unknown symbol: =
space
id: aux01
ID:aux01
expr-id
unknown symbol: .
id: GetElem
ID:GetElem
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
unknown symbol: }
Empty statement List
space
Empty statement List
space
space
unknown symbol: ;
space
unknown symbol: }
unknown symbol: }
space
classspace
id: LL
ID:LL
unknown symbol: {
space
publicspace
intspace
id: Start
ID:Start
unknown symbol: (
unknown symbol: )
unknown symbol: {
space
id: List
ID:List
space
id: head
ID:head
space
unknown symbol: ;
VarDecl

space
id: List
ID:List
space
id: last_elem
ID:last_elem
space
unknown symbol: ;
VarDecl

space
space
id: aux01
ID:aux01
space
unknown symbol: ;
VarDecl

space
id: Element
ID:Element
space
id: el01
ID:el01
space
unknown symbol: ;
VarDecl

space
id: Element
ID:Element
space
id: el02
ID:el02
space
unknown symbol: ;
VarDecl

space
id: Element
ID:Element
space
id: el03
ID:el03
space
unknown symbol: ;
VarDecl

space
id: last_elem
ID:last_elem
space
unknown symbol: =
space
space
id: List
ID:List
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: aux01
ID:aux01
space
unknown symbol: =
space
id: last_elem
ID:last_elem
expr-id
unknown symbol: .
id: Init
ID:Init
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: head
ID:head
space
unknown symbol: =
space
id: last_elem
ID:last_elem
expr-id
space
unknown symbol: ;
ex=ex
space
id: aux01
ID:aux01
space
unknown symbol: =
space
id: head
ID:head
expr-id
unknown symbol: .
id: Init
ID:Init
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: aux01
ID:aux01
space
unknown symbol: =
space
id: head
ID:head
expr-id
unknown symbol: .
id: Print
ID:Print
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
space
id: el01
ID:el01
space
unknown symbol: =
space
space
id: Element
ID:Element
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: aux01
ID:aux01
space
unknown symbol: =
space
id: el01
ID:el01
expr-id
unknown symbol: .
id: Init
ID:Init
unknown symbol: (
num: 25
unknown symbol: ,
num: 37000
unknown symbol: ,
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: head
ID:head
space
unknown symbol: =
space
id: head
ID:head
expr-id
unknown symbol: .
id: Insert
ID:Insert
unknown symbol: (
id: el01
ID:el01
expr-id
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: aux01
ID:aux01
space
unknown symbol: =
space
id: head
ID:head
expr-id
unknown symbol: .
id: Print
ID:Print
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
unknown symbol: (
num: 10000000
unknown symbol: )
unknown symbol: ;
space
space
id: el01
ID:el01
space
unknown symbol: =
space
space
id: Element
ID:Element
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: aux01
ID:aux01
space
unknown symbol: =
space
id: el01
ID:el01
expr-id
unknown symbol: .
id: Init
ID:Init
unknown symbol: (
num: 39
unknown symbol: ,
num: 42000
unknown symbol: ,
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: el02
ID:el02
space
unknown symbol: =
space
id: el01
ID:el01
expr-id
space
unknown symbol: ;
ex=ex
space
id: head
ID:head
space
unknown symbol: =
space
id: head
ID:head
expr-id
unknown symbol: .
id: Insert
ID:Insert
unknown symbol: (
id: el01
ID:el01
expr-id
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: aux01
ID:aux01
space
unknown symbol: =
space
id: head
ID:head
expr-id
unknown symbol: .
id: Print
ID:Print
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
unknown symbol: (
num: 10000000
unknown symbol: )
unknown symbol: ;
space
space
id: el01
ID:el01
space
unknown symbol: =
space
space
id: Element
ID:Element
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: aux01
ID:aux01
space
unknown symbol: =
space
id: el01
ID:el01
expr-id
unknown symbol: .
id: Init
ID:Init
unknown symbol: (
num: 22
unknown symbol: ,
num: 34000
unknown symbol: ,
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: head
ID:head
space
unknown symbol: =
space
id: head
ID:head
expr-id
unknown symbol: .
id: Insert
ID:Insert
unknown symbol: (
id: el01
ID:el01
expr-id
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: aux01
ID:aux01
space
unknown symbol: =
space
id: head
ID:head
expr-id
unknown symbol: .
id: Print
ID:Print
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: el03
ID:el03
space
unknown symbol: =
space
space
id: Element
ID:Element
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: aux01
ID:aux01
space
unknown symbol: =
space
id: el03
ID:el03
expr-id
unknown symbol: .
id: Init
ID:Init
unknown symbol: (
num: 27
unknown symbol: ,
num: 34000
unknown symbol: ,
unknown symbol: )
unknown symbol: ;
ex=ex
space
unknown symbol: (
id: head
ID:head
expr-id
unknown symbol: .
id: Search
ID:Search
unknown symbol: (
id: el02
ID:el02
expr-id
unknown symbol: )
unknown symbol: )
unknown symbol: ;
space
unknown symbol: (
id: head
ID:head
expr-id
unknown symbol: .
id: Search
ID:Search
unknown symbol: (
id: el03
ID:el03
expr-id
unknown symbol: )
unknown symbol: )
unknown symbol: ;
space
unknown symbol: (
num: 10000000
unknown symbol: )
unknown symbol: ;
space
space
id: el01
ID:el01
space
unknown symbol: =
space
space
id: Element
ID:Element
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: aux01
ID:aux01
space
unknown symbol: =
space
id: el01
ID:el01
expr-id
unknown symbol: .
id: Init
ID:Init
unknown symbol: (
num: 28
unknown symbol: ,
num: 35000
unknown symbol: ,
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: head
ID:head
space
unknown symbol: =
space
id: head
ID:head
expr-id
unknown symbol: .
id: Insert
ID:Insert
unknown symbol: (
id: el01
ID:el01
expr-id
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: aux01
ID:aux01
space
unknown symbol: =
space
id: head
ID:head
expr-id
unknown symbol: .
id: Print
ID:Print
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
unknown symbol: (
num: 2220000
unknown symbol: )
unknown symbol: ;
space
id: head
ID:head
space
unknown symbol: =
space
id: head
ID:head
expr-id
unknown symbol: .
id: Delete
ID:Delete
unknown symbol: (
id: el02
ID:el02
expr-id
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: aux01
ID:aux01
space
unknown symbol: =
space
id: head
ID:head
expr-id
unknown symbol: .
id: Print
ID:Print
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
unknown symbol: (
num: 33300000
unknown symbol: )
unknown symbol: ;
space
id: head
ID:head
space
unknown symbol: =
space
id: head
ID:head
expr-id
unknown symbol: .
id: Delete
ID:Delete
unknown symbol: (
id: el01
ID:el01
expr-id
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: aux01
ID:aux01
space
unknown symbol: =
space
id: head
ID:head
expr-id
unknown symbol: .
id: Print
ID:Print
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
unknown symbol: (
num: 44440000
unknown symbol: )
unknown symbol: ;
space
Empty statement List
space
num: 0
space
unknown symbol: ;
space
unknown symbol: }
space
unknown symbol: }

TableBuilder:
<end of output>
Test time =   0.86 sec
----------------------------------------------------------
Test Passed.
"graph_/home/tna0y/Desktop/Compiler/tests/examples/test_linked_list" end time: Dec 24 05:05 MSK
"graph_/home/tna0y/Desktop/Compiler/tests/examples/test_linked_list" time elapsed: 00:00:00
----------------------------------------------------------

3/32 Testing: graph_/home/tna0y/Desktop/Compiler/tests/examples/test_linsearch
3/32 Test: graph_/home/tna0y/Desktop/Compiler/tests/examples/test_linsearch
Command: "/usr/bin/valgrind" "--log-file=/home/tna0y/Desktop/Compiler/Testing/Temporary/MemoryChecker.3.log" "-q" "--tool=memcheck" "--leak-check=yes" "--show-reachable=yes" "--num-callers=50" "/home/tna0y/Desktop/Compiler/tests/examples/build_graph.sh" "/home/tna0y/Desktop/Compiler/tests/examples/test_linsearch"
Directory: /home/tna0y/Desktop/Compiler
"graph_/home/tna0y/Desktop/Compiler/tests/examples/test_linsearch" start time: Dec 24 05:05 MSK
Output:
----------------------------------------------------------
mkdir: cannot create directory ‘/home/tna0y/Desktop/Compiler/tests/examples/test_linsearch/IR’: File exists
classspace
id: LinearSearch
ID:LinearSearch
unknown symbol: {
space
publicspace
space
space
main
unknown symbol: (
unknown symbol: [
unknown symbol: ]
space
id: a
ID:a
unknown symbol: )
unknown symbol: {
space
unknown symbol: (
space
id: LS
ID:LS
unknown symbol: (
unknown symbol: )
unknown symbol: .
id: Start
ID:Start
unknown symbol: (
num: 10
unknown symbol: )
unknown symbol: )
unknown symbol: ;
space
unknown symbol: }
Empty statement List
unknown symbol: }
mainClass
space
classspace
id: LS
ID:LS
space
unknown symbol: {
space
intunknown symbol: [
unknown symbol: ]
space
id: number
ID:number
space
unknown symbol: ;
VarDecl

space
intspace
id: size
ID:size
space
unknown symbol: ;
VarDecl

space
space
space
publicspace
intspace
id: Start
ID:Start
unknown symbol: (
intspace
id: sz
ID:sz
unknown symbol: )
unknown symbol: {
space
intspace
id: aux01
ID:aux01
space
unknown symbol: ;
VarDecl

space
intspace
id: aux02
ID:aux02
space
unknown symbol: ;
VarDecl

space
id: aux01
ID:aux01
space
unknown symbol: =
space
unknown symbol: .
id: Init
ID:Init
unknown symbol: (
id: sz
ID:sz
expr-id
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: aux02
ID:aux02
space
unknown symbol: =
space
unknown symbol: .
id: Print
ID:Print
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
unknown symbol: (
num: 9999
unknown symbol: )
unknown symbol: ;
space
unknown symbol: (
unknown symbol: .
id: Search
ID:Search
unknown symbol: (
num: 8
unknown symbol: )
unknown symbol: )
unknown symbol: ;
space
unknown symbol: (
unknown symbol: .
id: Search
ID:Search
unknown symbol: (
num: 12
unknown symbol: )
unknown symbol: )
space
unknown symbol: ;
space
unknown symbol: (
unknown symbol: .
id: Search
ID:Search
unknown symbol: (
num: 17
unknown symbol: )
unknown symbol: )
space
unknown symbol: ;
space
unknown symbol: (
unknown symbol: .
id: Search
ID:Search
unknown symbol: (
num: 50
unknown symbol: )
unknown symbol: )
space
unknown symbol: ;
space
Empty statement List
space
num: 55
space
unknown symbol: ;
space
unknown symbol: }
space
space
publicspace
intspace
id: Print
ID:Print
unknown symbol: (
unknown symbol: )
unknown symbol: {
space
intspace
id: j
ID:j
space
unknown symbol: ;
VarDecl

space
id: j
ID:j
space
unknown symbol: =
space
num: 1
space
unknown symbol: ;
ex=ex
space
space
unknown symbol: (
id: j
ID:j
expr-id
space
unknown symbol: <
space
unknown symbol: (
id: size
ID:size
expr-id
unknown symbol: )
unknown symbol: )
space
unknown symbol: {
space
unknown symbol: (
id: number
ID:number
expr-id
unknown symbol: [
id: j
ID:j
expr-id
unknown symbol: ]
unknown symbol: )
unknown symbol: ;
space
id: j
ID:j
space
unknown symbol: =
space
id: j
ID:j
expr-id
space
unknown symbol: +
space
num: 1
space
unknown symbol: ;
ex=ex
space
unknown symbol: }
Empty statement List
space
Empty statement List
space
num: 0
space
unknown symbol: ;
space
unknown symbol: }
space
space
space
publicspace
intspace
id: Search
ID:Search
unknown symbol: (
intspace
id: num
ID:num
unknown symbol: )
unknown symbol: {
space
intspace
id: j
ID:j
space
unknown symbol: ;
VarDecl

space
space
id: ls01
ID:ls01
space
unknown symbol: ;
VarDecl

space
intspace
id: ifound
ID:ifound
space
unknown symbol: ;
VarDecl

space
intspace
id: aux01
ID:aux01
space
unknown symbol: ;
VarDecl

space
intspace
id: aux02
ID:aux02
space
unknown symbol: ;
VarDecl

space
intspace
id: nt
ID:nt
space
unknown symbol: ;
VarDecl

space
id: j
ID:j
space
unknown symbol: =
space
num: 1
space
unknown symbol: ;
ex=ex
space
id: ls01
ID:ls01
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
id: ifound
ID:ifound
space
unknown symbol: =
space
num: 0
space
unknown symbol: ;
ex=ex
space
space
space
unknown symbol: (
id: j
ID:j
expr-id
space
unknown symbol: <
space
unknown symbol: (
id: size
ID:size
expr-id
unknown symbol: )
unknown symbol: )
space
unknown symbol: {
space
id: aux01
ID:aux01
space
unknown symbol: =
space
id: number
ID:number
expr-id
unknown symbol: [
id: j
ID:j
expr-id
unknown symbol: ]
space
unknown symbol: ;
ex=ex
space
id: aux02
ID:aux02
space
unknown symbol: =
space
id: num
ID:num
expr-id
space
unknown symbol: +
space
num: 1
space
unknown symbol: ;
ex=ex
space
space
unknown symbol: (
id: aux01
ID:aux01
expr-id
space
unknown symbol: <
space
id: num
ID:num
expr-id
unknown symbol: )
space
id: nt
ID:nt
space
unknown symbol: =
space
num: 0
space
unknown symbol: ;
ex=ex
space
space
space
unknown symbol: (
unknown symbol: !
unknown symbol: (
id: aux01
ID:aux01
expr-id
space
unknown symbol: <
space
id: aux02
ID:aux02
expr-id
unknown symbol: )
unknown symbol: )
space
id: nt
ID:nt
space
unknown symbol: =
space
num: 0
space
unknown symbol: ;
ex=ex
space
space
unknown symbol: {
space
id: ls01
ID:ls01
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
id: ifound
ID:ifound
space
unknown symbol: =
space
num: 1
space
unknown symbol: ;
ex=ex
space
id: j
ID:j
space
unknown symbol: =
space
id: size
ID:size
expr-id
space
unknown symbol: ;
ex=ex
space
unknown symbol: }
Empty statement List
space
id: j
ID:j
space
unknown symbol: =
space
id: j
ID:j
expr-id
space
unknown symbol: +
space
num: 1
space
unknown symbol: ;
ex=ex
space
unknown symbol: }
Empty statement List
space
Empty statement List
space
id: ifound
ID:ifound
expr-id
space
unknown symbol: ;
space
unknown symbol: }
space
space
space
publicspace
intspace
id: Init
ID:Init
unknown symbol: (
intspace
id: sz
ID:sz
unknown symbol: )
unknown symbol: {
space
intspace
id: j
ID:j
space
unknown symbol: ;
VarDecl

space
intspace
id: k
ID:k
space
unknown symbol: ;
VarDecl

space
intspace
id: aux01
ID:aux01
space
unknown symbol: ;
VarDecl

space
intspace
id: aux02
ID:aux02
space
unknown symbol: ;
VarDecl

space
id: size
ID:size
space
unknown symbol: =
space
id: sz
ID:sz
expr-id
space
unknown symbol: ;
ex=ex
space
id: number
ID:number
space
unknown symbol: =
space
space
intunknown symbol: [
id: sz
ID:sz
expr-id
unknown symbol: ]
space
unknown symbol: ;
ex=ex
space
id: j
ID:j
space
unknown symbol: =
space
num: 1
space
unknown symbol: ;
ex=ex
space
id: k
ID:k
space
unknown symbol: =
space
id: size
ID:size
expr-id
space
unknown symbol: +
space
num: 1
space
unknown symbol: ;
ex=ex
space
space
unknown symbol: (
id: j
ID:j
expr-id
space
unknown symbol: <
space
unknown symbol: (
id: size
ID:size
expr-id
unknown symbol: )
unknown symbol: )
space
unknown symbol: {
space
id: aux01
ID:aux01
space
unknown symbol: =
space
num: 2
space
unknown symbol: *
space
id: j
ID:j
expr-id
space
unknown symbol: ;
ex=ex
space
id: aux02
ID:aux02
space
unknown symbol: =
space
id: k
ID:k
expr-id
space
unknown symbol: -
space
num: 3
space
unknown symbol: ;
ex=ex
space
id: number
ID:number
unknown symbol: [
id: j
ID:j
expr-id
unknown symbol: ]
space
unknown symbol: =
space
id: aux01
ID:aux01
expr-id
space
unknown symbol: +
space
id: aux02
ID:aux02
expr-id
space
unknown symbol: ;
space
id: j
ID:j
space
unknown symbol: =
space
id: j
ID:j
expr-id
space
unknown symbol: +
space
num: 1
space
unknown symbol: ;
ex=ex
space
id: k
ID:k
space
unknown symbol: =
space
id: k
ID:k
expr-id
space
unknown symbol: -
space
num: 1
space
unknown symbol: ;
ex=ex
space
unknown symbol: }
Empty statement List
space
Empty statement List
space
num: 0
space
unknown symbol: ;
space
unknown symbol: }
space
unknown symbol: }

TableBuilder:
<end of output>
Test time =   0.87 sec
----------------------------------------------------------
Test Passed.
"graph_/home/tna0y/Desktop/Compiler/tests/examples/test_linsearch" end time: Dec 24 05:05 MSK
"graph_/home/tna0y/Desktop/Compiler/tests/examples/test_linsearch" time elapsed: 00:00:00
----------------------------------------------------------

4/32 Testing: graph_/home/tna0y/Desktop/Compiler/tests/examples/test_quick_sort
4/32 Test: graph_/home/tna0y/Desktop/Compiler/tests/examples/test_quick_sort
Command: "/usr/bin/valgrind" "--log-file=/home/tna0y/Desktop/Compiler/Testing/Temporary/MemoryChecker.4.log" "-q" "--tool=memcheck" "--leak-check=yes" "--show-reachable=yes" "--num-callers=50" "/home/tna0y/Desktop/Compiler/tests/examples/build_graph.sh" "/home/tna0y/Desktop/Compiler/tests/examples/test_quick_sort"
Directory: /home/tna0y/Desktop/Compiler
"graph_/home/tna0y/Desktop/Compiler/tests/examples/test_quick_sort" start time: Dec 24 05:05 MSK
Output:
----------------------------------------------------------
mkdir: cannot create directory ‘/home/tna0y/Desktop/Compiler/tests/examples/test_quick_sort/IR’: File exists
classspace
id: QuickSort
ID:QuickSort
unknown symbol: {
space
publicspace
space
space
main
unknown symbol: (
unknown symbol: [
unknown symbol: ]
space
id: a
ID:a
unknown symbol: )
unknown symbol: {
space
unknown symbol: (
space
id: QS
ID:QS
unknown symbol: (
unknown symbol: )
unknown symbol: .
id: Start
ID:Start
unknown symbol: (
num: 10
unknown symbol: )
unknown symbol: )
unknown symbol: ;
space
unknown symbol: }
Empty statement List
unknown symbol: }
mainClass
space
classspace
id: QS
ID:QS
unknown symbol: {
space
intunknown symbol: [
unknown symbol: ]
space
id: number
ID:number
space
unknown symbol: ;
VarDecl

space
intspace
id: size
ID:size
space
unknown symbol: ;
VarDecl

space
space
space
publicspace
intspace
id: Start
ID:Start
unknown symbol: (
intspace
id: sz
ID:sz
unknown symbol: )
unknown symbol: {
space
intspace
id: aux01
ID:aux01
space
unknown symbol: ;
VarDecl

space
id: aux01
ID:aux01
space
unknown symbol: =
space
unknown symbol: .
id: Init
ID:Init
unknown symbol: (
id: sz
ID:sz
expr-id
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: aux01
ID:aux01
space
unknown symbol: =
space
unknown symbol: .
id: Print
ID:Print
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
unknown symbol: (
num: 9999
unknown symbol: )
unknown symbol: ;
space
id: aux01
ID:aux01
space
unknown symbol: =
space
id: size
ID:size
expr-id
space
unknown symbol: -
space
num: 1
space
unknown symbol: ;
ex=ex
space
id: aux01
ID:aux01
space
unknown symbol: =
space
unknown symbol: .
id: Sort
ID:Sort
unknown symbol: (
num: 0
unknown symbol: ,
id: aux01
ID:aux01
expr-id
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: aux01
ID:aux01
space
unknown symbol: =
space
unknown symbol: .
id: Print
ID:Print
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
Empty statement List
space
num: 0
space
unknown symbol: ;
space
unknown symbol: }
space
space
publicspace
intspace
id: Sort
ID:Sort
unknown symbol: (
intspace
id: left
ID:left
unknown symbol: ,
space
intspace
id: right
ID:right
ArgList
unknown symbol: )
unknown symbol: {
space
intspace
id: v
ID:v
space
unknown symbol: ;
VarDecl

space
intspace
id: i
ID:i
space
unknown symbol: ;
VarDecl

space
intspace
id: j
ID:j
space
unknown symbol: ;
VarDecl

space
intspace
id: nt
ID:nt
unknown symbol: ;
VarDecl

space
intspace
id: t
ID:t
space
unknown symbol: ;
VarDecl

space
space
id: cont01
ID:cont01
unknown symbol: ;
VarDecl

space
space
id: cont02
ID:cont02
unknown symbol: ;
VarDecl

space
intspace
id: aux03
ID:aux03
space
unknown symbol: ;
VarDecl

space
id: t
ID:t
space
unknown symbol: =
space
num: 0
space
unknown symbol: ;
ex=ex
space
space
unknown symbol: (
id: left
ID:left
expr-id
space
unknown symbol: <
space
id: right
ID:right
expr-id
unknown symbol: )
unknown symbol: {
space
id: v
ID:v
space
unknown symbol: =
space
id: number
ID:number
expr-id
unknown symbol: [
id: right
ID:right
expr-id
unknown symbol: ]
space
unknown symbol: ;
ex=ex
space
id: i
ID:i
space
unknown symbol: =
space
id: left
ID:left
expr-id
space
unknown symbol: -
space
num: 1
space
unknown symbol: ;
ex=ex
space
id: j
ID:j
space
unknown symbol: =
space
id: right
ID:right
expr-id
space
unknown symbol: ;
ex=ex
space
id: cont01
ID:cont01
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
space
unknown symbol: (
id: cont01
ID:cont01
expr-id
unknown symbol: )
unknown symbol: {
space
id: cont02
ID:cont02
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
space
unknown symbol: (
id: cont02
ID:cont02
expr-id
unknown symbol: )
unknown symbol: {
space
id: i
ID:i
space
unknown symbol: =
space
id: i
ID:i
expr-id
space
unknown symbol: +
space
num: 1
space
unknown symbol: ;
ex=ex
space
id: aux03
ID:aux03
space
unknown symbol: =
space
id: number
ID:number
expr-id
unknown symbol: [
id: i
ID:i
expr-id
unknown symbol: ]
space
unknown symbol: ;
ex=ex
space
space
unknown symbol: (
unknown symbol: !
unknown symbol: (
id: aux03
ID:aux03
expr-id
unknown symbol: <
id: v
ID:v
expr-id
unknown symbol: )
unknown symbol: )
space
id: cont02
ID:cont02
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
space
id: cont02
ID:cont02
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
unknown symbol: }
Empty statement List
space
id: cont02
ID:cont02
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
space
unknown symbol: (
id: cont02
ID:cont02
expr-id
unknown symbol: )
unknown symbol: {
space
id: j
ID:j
space
unknown symbol: =
space
id: j
ID:j
expr-id
space
unknown symbol: -
space
num: 1
space
unknown symbol: ;
ex=ex
space
id: aux03
ID:aux03
space
unknown symbol: =
space
id: number
ID:number
expr-id
unknown symbol: [
id: j
ID:j
expr-id
unknown symbol: ]
space
unknown symbol: ;
ex=ex
space
space
unknown symbol: (
unknown symbol: !
unknown symbol: (
id: v
ID:v
expr-id
space
unknown symbol: <
space
id: aux03
ID:aux03
expr-id
unknown symbol: )
unknown symbol: )
space
id: cont02
ID:cont02
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
space
id: cont02
ID:cont02
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
unknown symbol: }
Empty statement List
space
id: t
ID:t
space
unknown symbol: =
space
id: number
ID:number
expr-id
unknown symbol: [
id: i
ID:i
expr-id
unknown symbol: ]
space
unknown symbol: ;
ex=ex
space
id: number
ID:number
unknown symbol: [
id: i
ID:i
expr-id
unknown symbol: ]
space
unknown symbol: =
space
id: number
ID:number
expr-id
unknown symbol: [
id: j
ID:j
expr-id
unknown symbol: ]
space
unknown symbol: ;
space
id: number
ID:number
unknown symbol: [
id: j
ID:j
expr-id
unknown symbol: ]
space
unknown symbol: =
space
id: t
ID:t
expr-id
space
unknown symbol: ;
space
space
space
unknown symbol: (
space
id: j
ID:j
expr-id
space
unknown symbol: <
space
unknown symbol: (
id: i
ID:i
expr-id
unknown symbol: +
num: 1
unknown symbol: )
unknown symbol: )
space
id: cont01
ID:cont01
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
space
id: cont01
ID:cont01
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
unknown symbol: }
Empty statement List
space
id: number
ID:number
unknown symbol: [
id: j
ID:j
expr-id
unknown symbol: ]
space
unknown symbol: =
space
id: number
ID:number
expr-id
unknown symbol: [
id: i
ID:i
expr-id
unknown symbol: ]
space
unknown symbol: ;
space
id: number
ID:number
unknown symbol: [
id: i
ID:i
expr-id
unknown symbol: ]
space
unknown symbol: =
space
id: number
ID:number
expr-id
unknown symbol: [
id: right
ID:right
expr-id
unknown symbol: ]
space
unknown symbol: ;
space
id: number
ID:number
unknown symbol: [
id: right
ID:right
expr-id
unknown symbol: ]
space
unknown symbol: =
space
id: t
ID:t
expr-id
space
unknown symbol: ;
space
id: nt
ID:nt
space
unknown symbol: =
space
unknown symbol: .
id: Sort
ID:Sort
unknown symbol: (
id: left
ID:left
expr-id
unknown symbol: ,
id: i
ID:i
expr-id
unknown symbol: -
num: 1
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: nt
ID:nt
space
unknown symbol: =
space
unknown symbol: .
id: Sort
ID:Sort
unknown symbol: (
id: i
ID:i
expr-id
unknown symbol: +
num: 1
unknown symbol: ,
id: right
ID:right
expr-id
unknown symbol: )
unknown symbol: ;
ex=ex
space
unknown symbol: }
Empty statement List
space
space
id: nt
ID:nt
space
unknown symbol: =
space
num: 0
space
unknown symbol: ;
ex=ex
space
Empty statement List
space
num: 0
space
unknown symbol: ;
space
unknown symbol: }
space
space
publicspace
intspace
id: Print
ID:Print
unknown symbol: (
unknown symbol: )
unknown symbol: {
space
intspace
id: j
ID:j
space
unknown symbol: ;
VarDecl

space
id: j
ID:j
space
unknown symbol: =
space
num: 0
space
unknown symbol: ;
ex=ex
space
space
unknown symbol: (
id: j
ID:j
expr-id
space
unknown symbol: <
space
unknown symbol: (
id: size
ID:size
expr-id
unknown symbol: )
unknown symbol: )
space
unknown symbol: {
space
unknown symbol: (
id: number
ID:number
expr-id
unknown symbol: [
id: j
ID:j
expr-id
unknown symbol: ]
unknown symbol: )
unknown symbol: ;
space
id: j
ID:j
space
unknown symbol: =
space
id: j
ID:j
expr-id
space
unknown symbol: +
space
num: 1
space
unknown symbol: ;
ex=ex
space
unknown symbol: }
Empty statement List
space
Empty statement List
space
num: 0
space
unknown symbol: ;
space
unknown symbol: }
space
space
publicspace
intspace
id: Init
ID:Init
unknown symbol: (
intspace
id: sz
ID:sz
unknown symbol: )
unknown symbol: {
space
id: size
ID:size
space
unknown symbol: =
space
id: sz
ID:sz
expr-id
space
unknown symbol: ;
ex=ex
space
id: number
ID:number
space
unknown symbol: =
space
space
intunknown symbol: [
id: sz
ID:sz
expr-id
unknown symbol: ]
space
unknown symbol: ;
ex=ex
space
id: number
ID:number
unknown symbol: [
num: 0
unknown symbol: ]
space
unknown symbol: =
space
num: 20
space
unknown symbol: ;
space
id: number
ID:number
unknown symbol: [
num: 1
unknown symbol: ]
space
unknown symbol: =
space
num: 7
space
unknown symbol: ;
space
id: number
ID:number
unknown symbol: [
num: 2
unknown symbol: ]
space
unknown symbol: =
space
num: 12
space
unknown symbol: ;
space
id: number
ID:number
unknown symbol: [
num: 3
unknown symbol: ]
space
unknown symbol: =
space
num: 18
space
unknown symbol: ;
space
id: number
ID:number
unknown symbol: [
num: 4
unknown symbol: ]
space
unknown symbol: =
space
num: 2
space
unknown symbol: ;
space
id: number
ID:number
unknown symbol: [
num: 5
unknown symbol: ]
space
unknown symbol: =
space
num: 11
space
unknown symbol: ;
space
id: number
ID:number
unknown symbol: [
num: 6
unknown symbol: ]
space
unknown symbol: =
space
num: 6
space
unknown symbol: ;
space
id: number
ID:number
unknown symbol: [
num: 7
unknown symbol: ]
space
unknown symbol: =
space
num: 9
space
unknown symbol: ;
space
id: number
ID:number
unknown symbol: [
num: 8
unknown symbol: ]
space
unknown symbol: =
space
num: 19
space
unknown symbol: ;
space
id: number
ID:number
unknown symbol: [
num: 9
unknown symbol: ]
space
unknown symbol: =
space
num: 5
space
unknown symbol: ;
space
Empty statement List
space
num: 0
space
unknown symbol: ;
space
unknown symbol: }
space
unknown symbol: }

TableBuilder:
<end of output>
Test time =   0.83 sec
----------------------------------------------------------
Test Passed.
"graph_/home/tna0y/Desktop/Compiler/tests/examples/test_quick_sort" end time: Dec 24 05:05 MSK
"graph_/home/tna0y/Desktop/Compiler/tests/examples/test_quick_sort" time elapsed: 00:00:00
----------------------------------------------------------

5/32 Testing: graph_/home/tna0y/Desktop/Compiler/tests/examples/test_tree_visitor
5/32 Test: graph_/home/tna0y/Desktop/Compiler/tests/examples/test_tree_visitor
Command: "/usr/bin/valgrind" "--log-file=/home/tna0y/Desktop/Compiler/Testing/Temporary/MemoryChecker.5.log" "-q" "--tool=memcheck" "--leak-check=yes" "--show-reachable=yes" "--num-callers=50" "/home/tna0y/Desktop/Compiler/tests/examples/build_graph.sh" "/home/tna0y/Desktop/Compiler/tests/examples/test_tree_visitor"
Directory: /home/tna0y/Desktop/Compiler
"graph_/home/tna0y/Desktop/Compiler/tests/examples/test_tree_visitor" start time: Dec 24 05:05 MSK
Output:
----------------------------------------------------------
mkdir: cannot create directory ‘/home/tna0y/Desktop/Compiler/tests/examples/test_tree_visitor/IR’: File exists
space
classspace
id: TreeVisitor
ID:TreeVisitor
unknown symbol: {
space
publicspace
space
space
main
unknown symbol: (
unknown symbol: [
unknown symbol: ]
space
id: a
ID:a
unknown symbol: )
unknown symbol: {
space
unknown symbol: (
space
id: TV
ID:TV
unknown symbol: (
unknown symbol: )
unknown symbol: .
id: Start
ID:Start
unknown symbol: (
unknown symbol: )
unknown symbol: )
unknown symbol: ;
space
unknown symbol: }
Empty statement List
unknown symbol: }
mainClass
space
classspace
id: TV
ID:TV
space
unknown symbol: {
space
publicspace
intspace
id: Start
ID:Start
unknown symbol: (
unknown symbol: )
unknown symbol: {
space
id: Tree
ID:Tree
space
id: root
ID:root
space
unknown symbol: ;
VarDecl

space
space
id: ntb
ID:ntb
space
unknown symbol: ;
VarDecl

space
intspace
id: nti
ID:nti
space
unknown symbol: ;
VarDecl

space
id: MyVisitor
ID:MyVisitor
space
id: v
ID:v
space
unknown symbol: ;
VarDecl

space
id: root
ID:root
space
unknown symbol: =
space
space
id: Tree
ID:Tree
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: ntb
ID:ntb
space
unknown symbol: =
space
id: root
ID:root
expr-id
unknown symbol: .
id: Init
ID:Init
unknown symbol: (
num: 16
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: ntb
ID:ntb
space
unknown symbol: =
space
id: root
ID:root
expr-id
unknown symbol: .
id: Print
ID:Print
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
unknown symbol: (
num: 100000000
unknown symbol: )
unknown symbol: ;
space
id: ntb
ID:ntb
space
unknown symbol: =
space
id: root
ID:root
expr-id
unknown symbol: .
id: Insert
ID:Insert
unknown symbol: (
num: 8
unknown symbol: )
space
unknown symbol: ;
ex=ex
space
id: ntb
ID:ntb
space
unknown symbol: =
space
id: root
ID:root
expr-id
unknown symbol: .
id: Insert
ID:Insert
unknown symbol: (
num: 24
unknown symbol: )
space
unknown symbol: ;
ex=ex
space
id: ntb
ID:ntb
space
unknown symbol: =
space
id: root
ID:root
expr-id
unknown symbol: .
id: Insert
ID:Insert
unknown symbol: (
num: 4
unknown symbol: )
space
unknown symbol: ;
ex=ex
space
id: ntb
ID:ntb
space
unknown symbol: =
space
id: root
ID:root
expr-id
unknown symbol: .
id: Insert
ID:Insert
unknown symbol: (
num: 12
unknown symbol: )
space
unknown symbol: ;
ex=ex
space
id: ntb
ID:ntb
space
unknown symbol: =
space
id: root
ID:root
expr-id
unknown symbol: .
id: Insert
ID:Insert
unknown symbol: (
num: 20
unknown symbol: )
space
unknown symbol: ;
ex=ex
space
id: ntb
ID:ntb
space
unknown symbol: =
space
id: root
ID:root
expr-id
unknown symbol: .
id: Insert
ID:Insert
unknown symbol: (
num: 28
unknown symbol: )
space
unknown symbol: ;
ex=ex
space
id: ntb
ID:ntb
space
unknown symbol: =
space
id: root
ID:root
expr-id
unknown symbol: .
id: Insert
ID:Insert
unknown symbol: (
num: 14
unknown symbol: )
space
unknown symbol: ;
ex=ex
space
id: ntb
ID:ntb
space
unknown symbol: =
space
id: root
ID:root
expr-id
unknown symbol: .
id: Print
ID:Print
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
unknown symbol: (
num: 100000000
unknown symbol: )
unknown symbol: ;
space
id: v
ID:v
space
unknown symbol: =
space
space
id: MyVisitor
ID:MyVisitor
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
unknown symbol: (
num: 50000000
unknown symbol: )
unknown symbol: ;
space
id: nti
ID:nti
space
unknown symbol: =
space
id: root
ID:root
expr-id
unknown symbol: .
id: accept
ID:accept
unknown symbol: (
id: v
ID:v
expr-id
unknown symbol: )
unknown symbol: ;
ex=ex
space
unknown symbol: (
num: 100000000
unknown symbol: )
unknown symbol: ;
space
unknown symbol: (
id: root
ID:root
expr-id
unknown symbol: .
id: Search
ID:Search
unknown symbol: (
num: 24
unknown symbol: )
unknown symbol: )
unknown symbol: ;
space
unknown symbol: (
id: root
ID:root
expr-id
unknown symbol: .
id: Search
ID:Search
unknown symbol: (
num: 12
unknown symbol: )
unknown symbol: )
unknown symbol: ;
space
unknown symbol: (
id: root
ID:root
expr-id
unknown symbol: .
id: Search
ID:Search
unknown symbol: (
num: 16
unknown symbol: )
unknown symbol: )
unknown symbol: ;
space
unknown symbol: (
id: root
ID:root
expr-id
unknown symbol: .
id: Search
ID:Search
unknown symbol: (
num: 50
unknown symbol: )
unknown symbol: )
unknown symbol: ;
space
unknown symbol: (
id: root
ID:root
expr-id
unknown symbol: .
id: Search
ID:Search
unknown symbol: (
num: 12
unknown symbol: )
unknown symbol: )
unknown symbol: ;
space
id: ntb
ID:ntb
space
unknown symbol: =
space
id: root
ID:root
expr-id
unknown symbol: .
id: Delete
ID:Delete
unknown symbol: (
num: 12
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: ntb
ID:ntb
space
unknown symbol: =
space
id: root
ID:root
expr-id
unknown symbol: .
id: Print
ID:Print
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
unknown symbol: (
id: root
ID:root
expr-id
unknown symbol: .
id: Search
ID:Search
unknown symbol: (
num: 12
unknown symbol: )
unknown symbol: )
unknown symbol: ;
space
Empty statement List
space
num: 0
space
unknown symbol: ;
space
unknown symbol: }
space
unknown symbol: }
space
classspace
id: Tree
ID:Tree
unknown symbol: {
space
id: Tree
ID:Tree
space
id: left
ID:left
space
unknown symbol: ;
VarDecl

space
id: Tree
ID:Tree
space
id: right
ID:right
unknown symbol: ;
VarDecl

space
intspace
id: key
ID:key
space
unknown symbol: ;
VarDecl

space
space
id: has_left
ID:has_left
space
unknown symbol: ;
VarDecl

space
space
id: has_right
ID:has_right
space
unknown symbol: ;
VarDecl

space
id: Tree
ID:Tree
space
id: my_null
ID:my_null
space
unknown symbol: ;
VarDecl

space
space
space
space
space
space
space
space
space
space
space
space
space
publicspace
space
id: Init
ID:Init
unknown symbol: (
intspace
id: v_key
ID:v_key
unknown symbol: )
unknown symbol: {
space
id: key
ID:key
space
unknown symbol: =
space
id: v_key
ID:v_key
expr-id
space
unknown symbol: ;
ex=ex
space
id: has_left
ID:has_left
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
id: has_right
ID:has_right
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
Empty statement List
space
space
unknown symbol: ;
space
unknown symbol: }
space
publicspace
space
id: SetRight
ID:SetRight
unknown symbol: (
id: Tree
ID:Tree
space
id: rn
ID:rn
unknown symbol: )
unknown symbol: {
space
id: right
ID:right
space
unknown symbol: =
space
id: rn
ID:rn
expr-id
space
unknown symbol: ;
ex=ex
space
Empty statement List
space
space
unknown symbol: ;
space
unknown symbol: }
space
publicspace
space
id: SetLeft
ID:SetLeft
unknown symbol: (
id: Tree
ID:Tree
space
id: ln
ID:ln
unknown symbol: )
unknown symbol: {
space
id: left
ID:left
space
unknown symbol: =
space
id: ln
ID:ln
expr-id
space
unknown symbol: ;
ex=ex
space
Empty statement List
space
space
unknown symbol: ;
space
unknown symbol: }
space
publicspace
id: Tree
ID:Tree
space
id: GetRight
ID:GetRight
unknown symbol: (
unknown symbol: )
unknown symbol: {
space
Empty statement List
space
id: right
ID:right
expr-id
space
unknown symbol: ;
space
unknown symbol: }
space
publicspace
id: Tree
ID:Tree
space
id: GetLeft
ID:GetLeft
unknown symbol: (
unknown symbol: )
unknown symbol: {
space
Empty statement List
space
id: left
ID:left
expr-id
unknown symbol: ;
space
unknown symbol: }
space
publicspace
intspace
id: GetKey
ID:GetKey
unknown symbol: (
unknown symbol: )
unknown symbol: {
space
Empty statement List
space
id: key
ID:key
expr-id
space
unknown symbol: ;
space
unknown symbol: }
space
publicspace
space
id: SetKey
ID:SetKey
unknown symbol: (
intspace
id: v_key
ID:v_key
unknown symbol: )
unknown symbol: {
space
id: key
ID:key
space
unknown symbol: =
space
id: v_key
ID:v_key
expr-id
space
unknown symbol: ;
ex=ex
space
Empty statement List
space
space
unknown symbol: ;
space
unknown symbol: }
space
publicspace
space
id: GetHas_Right
ID:GetHas_Right
unknown symbol: (
unknown symbol: )
unknown symbol: {
space
Empty statement List
space
id: has_right
ID:has_right
expr-id
space
unknown symbol: ;
space
unknown symbol: }
space
publicspace
space
id: GetHas_Left
ID:GetHas_Left
unknown symbol: (
unknown symbol: )
unknown symbol: {
space
Empty statement List
space
id: has_left
ID:has_left
expr-id
space
unknown symbol: ;
space
unknown symbol: }
space
publicspace
space
id: SetHas_Left
ID:SetHas_Left
unknown symbol: (
space
id: val
ID:val
unknown symbol: )
unknown symbol: {
space
id: has_left
ID:has_left
space
unknown symbol: =
space
id: val
ID:val
expr-id
space
unknown symbol: ;
ex=ex
space
Empty statement List
space
space
unknown symbol: ;
space
unknown symbol: }
space
publicspace
space
id: SetHas_Right
ID:SetHas_Right
unknown symbol: (
space
id: val
ID:val
unknown symbol: )
unknown symbol: {
space
id: has_right
ID:has_right
space
unknown symbol: =
space
id: val
ID:val
expr-id
space
unknown symbol: ;
ex=ex
space
Empty statement List
space
space
unknown symbol: ;
space
unknown symbol: }
space
publicspace
space
id: Compare
ID:Compare
unknown symbol: (
intspace
id: num1
ID:num1
space
unknown symbol: ,
space
intspace
id: num2
ID:num2
ArgList
unknown symbol: )
unknown symbol: {
space
space
id: ntb
ID:ntb
space
unknown symbol: ;
VarDecl

space
intspace
id: nti
ID:nti
space
unknown symbol: ;
VarDecl

space
id: ntb
ID:ntb
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
id: nti
ID:nti
space
unknown symbol: =
space
id: num2
ID:num2
expr-id
space
unknown symbol: +
space
num: 1
space
unknown symbol: ;
ex=ex
space
space
unknown symbol: (
id: num1
ID:num1
expr-id
space
unknown symbol: <
space
id: num2
ID:num2
expr-id
unknown symbol: )
space
id: ntb
ID:ntb
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
space
space
unknown symbol: (
unknown symbol: !
unknown symbol: (
id: num1
ID:num1
expr-id
space
unknown symbol: <
space
id: nti
ID:nti
expr-id
unknown symbol: )
unknown symbol: )
space
id: ntb
ID:ntb
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
space
id: ntb
ID:ntb
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
Empty statement List
space
id: ntb
ID:ntb
expr-id
space
unknown symbol: ;
space
unknown symbol: }
space
publicspace
space
id: Insert
ID:Insert
unknown symbol: (
intspace
id: v_key
ID:v_key
unknown symbol: )
unknown symbol: {
space
id: Tree
ID:Tree
space
id: new_node
ID:new_node
space
unknown symbol: ;
VarDecl

space
space
id: ntb
ID:ntb
space
unknown symbol: ;
VarDecl

space
id: Tree
ID:Tree
space
id: current_node
ID:current_node
space
unknown symbol: ;
VarDecl

space
space
id: cont
ID:cont
space
unknown symbol: ;
VarDecl

space
intspace
id: key_aux
ID:key_aux
space
unknown symbol: ;
VarDecl

space
id: new_node
ID:new_node
space
unknown symbol: =
space
space
id: Tree
ID:Tree
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: ntb
ID:ntb
space
unknown symbol: =
space
id: new_node
ID:new_node
expr-id
unknown symbol: .
id: Init
ID:Init
unknown symbol: (
id: v_key
ID:v_key
expr-id
unknown symbol: )
space
unknown symbol: ;
ex=ex
space
id: current_node
ID:current_node
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
id: cont
ID:cont
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
space
unknown symbol: (
id: cont
ID:cont
expr-id
unknown symbol: )
unknown symbol: {
space
id: key_aux
ID:key_aux
space
unknown symbol: =
space
id: current_node
ID:current_node
expr-id
unknown symbol: .
id: GetKey
ID:GetKey
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
space
unknown symbol: (
id: v_key
ID:v_key
expr-id
space
unknown symbol: <
space
id: key_aux
ID:key_aux
expr-id
unknown symbol: )
unknown symbol: {
space
space
unknown symbol: (
id: current_node
ID:current_node
expr-id
unknown symbol: .
id: GetHas_Left
ID:GetHas_Left
unknown symbol: (
unknown symbol: )
unknown symbol: )
space
id: current_node
ID:current_node
space
unknown symbol: =
space
id: current_node
ID:current_node
expr-id
unknown symbol: .
id: GetLeft
ID:GetLeft
unknown symbol: (
unknown symbol: )
space
unknown symbol: ;
ex=ex
space
space
unknown symbol: {
space
id: cont
ID:cont
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
id: ntb
ID:ntb
space
unknown symbol: =
space
id: current_node
ID:current_node
expr-id
unknown symbol: .
id: SetHas_Left
ID:SetHas_Left
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: ntb
ID:ntb
space
unknown symbol: =
space
id: current_node
ID:current_node
expr-id
unknown symbol: .
id: SetLeft
ID:SetLeft
unknown symbol: (
id: new_node
ID:new_node
expr-id
unknown symbol: )
unknown symbol: ;
ex=ex
space
unknown symbol: }
Empty statement List
space
unknown symbol: }
Empty statement List
space
unknown symbol: {
space
space
unknown symbol: (
id: current_node
ID:current_node
expr-id
unknown symbol: .
id: GetHas_Right
ID:GetHas_Right
unknown symbol: (
unknown symbol: )
unknown symbol: )
space
id: current_node
ID:current_node
space
unknown symbol: =
space
id: current_node
ID:current_node
expr-id
unknown symbol: .
id: GetRight
ID:GetRight
unknown symbol: (
unknown symbol: )
space
unknown symbol: ;
ex=ex
space
space
unknown symbol: {
space
id: cont
ID:cont
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
id: ntb
ID:ntb
space
unknown symbol: =
space
id: current_node
ID:current_node
expr-id
unknown symbol: .
id: SetHas_Right
ID:SetHas_Right
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: ntb
ID:ntb
space
unknown symbol: =
space
id: current_node
ID:current_node
expr-id
unknown symbol: .
id: SetRight
ID:SetRight
unknown symbol: (
id: new_node
ID:new_node
expr-id
unknown symbol: )
unknown symbol: ;
ex=ex
space
unknown symbol: }
Empty statement List
space
unknown symbol: }
Empty statement List
space
unknown symbol: }
Empty statement List
space
Empty statement List
space
space
unknown symbol: ;
space
unknown symbol: }
space
publicspace
space
id: Delete
ID:Delete
unknown symbol: (
intspace
id: v_key
ID:v_key
unknown symbol: )
unknown symbol: {
space
id: Tree
ID:Tree
space
id: current_node
ID:current_node
space
unknown symbol: ;
VarDecl

space
id: Tree
ID:Tree
space
id: parent_node
ID:parent_node
space
unknown symbol: ;
VarDecl

space
space
id: cont
ID:cont
space
unknown symbol: ;
VarDecl

space
space
id: found
ID:found
space
unknown symbol: ;
VarDecl

space
space
id: ntb
ID:ntb
space
unknown symbol: ;
VarDecl

space
space
id: is_root
ID:is_root
space
unknown symbol: ;
VarDecl

space
intspace
id: key_aux
ID:key_aux
space
unknown symbol: ;
VarDecl

space
id: current_node
ID:current_node
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
id: parent_node
ID:parent_node
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
id: cont
ID:cont
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
id: found
ID:found
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
id: is_root
ID:is_root
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
space
unknown symbol: (
id: cont
ID:cont
expr-id
unknown symbol: )
unknown symbol: {
space
id: key_aux
ID:key_aux
space
unknown symbol: =
space
id: current_node
ID:current_node
expr-id
unknown symbol: .
id: GetKey
ID:GetKey
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
space
unknown symbol: (
id: v_key
ID:v_key
expr-id
space
unknown symbol: <
space
id: key_aux
ID:key_aux
expr-id
unknown symbol: )
space
space
unknown symbol: (
id: current_node
ID:current_node
expr-id
unknown symbol: .
id: GetHas_Left
ID:GetHas_Left
unknown symbol: (
unknown symbol: )
unknown symbol: )
unknown symbol: {
space
id: parent_node
ID:parent_node
space
unknown symbol: =
space
id: current_node
ID:current_node
expr-id
space
unknown symbol: ;
ex=ex
space
id: current_node
ID:current_node
space
unknown symbol: =
space
id: current_node
ID:current_node
expr-id
unknown symbol: .
id: GetLeft
ID:GetLeft
unknown symbol: (
unknown symbol: )
space
unknown symbol: ;
ex=ex
space
unknown symbol: }
Empty statement List
space
space
id: cont
ID:cont
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
space
space
unknown symbol: (
id: key_aux
ID:key_aux
expr-id
space
unknown symbol: <
space
id: v_key
ID:v_key
expr-id
unknown symbol: )
space
space
unknown symbol: (
id: current_node
ID:current_node
expr-id
unknown symbol: .
id: GetHas_Right
ID:GetHas_Right
unknown symbol: (
unknown symbol: )
unknown symbol: )
unknown symbol: {
space
id: parent_node
ID:parent_node
space
unknown symbol: =
space
id: current_node
ID:current_node
expr-id
space
unknown symbol: ;
ex=ex
space
id: current_node
ID:current_node
space
unknown symbol: =
space
id: current_node
ID:current_node
expr-id
unknown symbol: .
id: GetRight
ID:GetRight
unknown symbol: (
unknown symbol: )
space
unknown symbol: ;
ex=ex
space
unknown symbol: }
Empty statement List
space
space
id: cont
ID:cont
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
space
unknown symbol: {
space
space
unknown symbol: (
id: is_root
ID:is_root
expr-id
unknown symbol: )
space
space
unknown symbol: (
unknown symbol: !
id: current_node
ID:current_node
expr-id
unknown symbol: .
id: GetHas_Right
ID:GetHas_Right
unknown symbol: (
unknown symbol: )
space
space
unknown symbol: !
id: current_node
ID:current_node
expr-id
unknown symbol: .
id: GetHas_Left
ID:GetHas_Left
unknown symbol: (
unknown symbol: )
space
unknown symbol: )
space
id: ntb
ID:ntb
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
space
id: ntb
ID:ntb
space
unknown symbol: =
space
unknown symbol: .
id: Remove
ID:Remove
unknown symbol: (
id: parent_node
ID:parent_node
expr-id
unknown symbol: ,
id: current_node
ID:current_node
expr-id
unknown symbol: )
unknown symbol: ;
ex=ex
space
space
id: ntb
ID:ntb
space
unknown symbol: =
space
unknown symbol: .
id: Remove
ID:Remove
unknown symbol: (
id: parent_node
ID:parent_node
expr-id
unknown symbol: ,
id: current_node
ID:current_node
expr-id
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: found
ID:found
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
id: cont
ID:cont
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
unknown symbol: }
Empty statement List
space
id: is_root
ID:is_root
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
unknown symbol: }
Empty statement List
space
Empty statement List
space
id: found
ID:found
expr-id
space
unknown symbol: ;
space
unknown symbol: }
space
publicspace
space
id: Remove
ID:Remove
unknown symbol: (
id: Tree
ID:Tree
space
id: p_node
ID:p_node
unknown symbol: ,
space
id: Tree
ID:Tree
space
id: c_node
ID:c_node
ArgList
unknown symbol: )
unknown symbol: {
space
space
id: ntb
ID:ntb
space
unknown symbol: ;
VarDecl

space
intspace
id: auxkey1
ID:auxkey1
space
unknown symbol: ;
VarDecl

space
intspace
id: auxkey2
ID:auxkey2
space
unknown symbol: ;
VarDecl

space
space
unknown symbol: (
id: c_node
ID:c_node
expr-id
unknown symbol: .
id: GetHas_Left
ID:GetHas_Left
unknown symbol: (
unknown symbol: )
unknown symbol: )
space
id: ntb
ID:ntb
space
unknown symbol: =
space
unknown symbol: .
id: RemoveLeft
ID:RemoveLeft
unknown symbol: (
id: p_node
ID:p_node
expr-id
unknown symbol: ,
id: c_node
ID:c_node
expr-id
unknown symbol: )
space
unknown symbol: ;
ex=ex
space
space
space
unknown symbol: (
id: c_node
ID:c_node
expr-id
unknown symbol: .
id: GetHas_Right
ID:GetHas_Right
unknown symbol: (
unknown symbol: )
unknown symbol: )
space
id: ntb
ID:ntb
space
unknown symbol: =
space
unknown symbol: .
id: RemoveRight
ID:RemoveRight
unknown symbol: (
id: p_node
ID:p_node
expr-id
unknown symbol: ,
id: c_node
ID:c_node
expr-id
unknown symbol: )
space
unknown symbol: ;
ex=ex
space
space
unknown symbol: {
space
id: auxkey1
ID:auxkey1
space
unknown symbol: =
space
id: c_node
ID:c_node
expr-id
unknown symbol: .
id: GetKey
ID:GetKey
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: auxkey2
ID:auxkey2
space
unknown symbol: =
space
unknown symbol: (
id: p_node
ID:p_node
expr-id
unknown symbol: .
id: GetLeft
ID:GetLeft
unknown symbol: (
unknown symbol: )
unknown symbol: )
unknown symbol: .
id: GetKey
ID:GetKey
unknown symbol: (
unknown symbol: )
space
unknown symbol: ;
ex=ex
space
space
unknown symbol: (
unknown symbol: .
id: Compare
ID:Compare
unknown symbol: (
id: auxkey1
ID:auxkey1
expr-id
unknown symbol: ,
id: auxkey2
ID:auxkey2
expr-id
unknown symbol: )
unknown symbol: )
space
unknown symbol: {
space
id: ntb
ID:ntb
space
unknown symbol: =
space
id: p_node
ID:p_node
expr-id
unknown symbol: .
id: SetLeft
ID:SetLeft
unknown symbol: (
id: my_null
ID:my_null
expr-id
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: ntb
ID:ntb
space
unknown symbol: =
space
id: p_node
ID:p_node
expr-id
unknown symbol: .
id: SetHas_Left
ID:SetHas_Left
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
unknown symbol: }
Empty statement List
space
space
unknown symbol: {
space
id: ntb
ID:ntb
space
unknown symbol: =
space
id: p_node
ID:p_node
expr-id
unknown symbol: .
id: SetRight
ID:SetRight
unknown symbol: (
id: my_null
ID:my_null
expr-id
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: ntb
ID:ntb
space
unknown symbol: =
space
id: p_node
ID:p_node
expr-id
unknown symbol: .
id: SetHas_Right
ID:SetHas_Right
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
unknown symbol: }
Empty statement List
space
unknown symbol: }
Empty statement List
space
Empty statement List
space
space
unknown symbol: ;
space
unknown symbol: }
space
publicspace
space
id: RemoveRight
ID:RemoveRight
unknown symbol: (
id: Tree
ID:Tree
space
id: p_node
ID:p_node
unknown symbol: ,
space
id: Tree
ID:Tree
space
id: c_node
ID:c_node
ArgList
unknown symbol: )
unknown symbol: {
space
space
id: ntb
ID:ntb
space
unknown symbol: ;
VarDecl

space
space
unknown symbol: (
id: c_node
ID:c_node
expr-id
unknown symbol: .
id: GetHas_Right
ID:GetHas_Right
unknown symbol: (
unknown symbol: )
unknown symbol: )
unknown symbol: {
space
id: ntb
ID:ntb
space
unknown symbol: =
space
id: c_node
ID:c_node
expr-id
unknown symbol: .
id: SetKey
ID:SetKey
unknown symbol: (
unknown symbol: (
id: c_node
ID:c_node
expr-id
unknown symbol: .
id: GetRight
ID:GetRight
unknown symbol: (
unknown symbol: )
unknown symbol: )
unknown symbol: .
id: GetKey
ID:GetKey
unknown symbol: (
unknown symbol: )
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: p_node
ID:p_node
space
unknown symbol: =
space
id: c_node
ID:c_node
expr-id
space
unknown symbol: ;
ex=ex
space
id: c_node
ID:c_node
space
unknown symbol: =
space
id: c_node
ID:c_node
expr-id
unknown symbol: .
id: GetRight
ID:GetRight
unknown symbol: (
unknown symbol: )
space
unknown symbol: ;
ex=ex
space
unknown symbol: }
Empty statement List
space
id: ntb
ID:ntb
space
unknown symbol: =
space
id: p_node
ID:p_node
expr-id
unknown symbol: .
id: SetRight
ID:SetRight
unknown symbol: (
id: my_null
ID:my_null
expr-id
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: ntb
ID:ntb
space
unknown symbol: =
space
id: p_node
ID:p_node
expr-id
unknown symbol: .
id: SetHas_Right
ID:SetHas_Right
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
Empty statement List
space
space
unknown symbol: ;
space
unknown symbol: }
space
publicspace
space
id: RemoveLeft
ID:RemoveLeft
unknown symbol: (
id: Tree
ID:Tree
space
id: p_node
ID:p_node
unknown symbol: ,
space
id: Tree
ID:Tree
space
id: c_node
ID:c_node
ArgList
unknown symbol: )
unknown symbol: {
space
space
id: ntb
ID:ntb
space
unknown symbol: ;
VarDecl

space
space
unknown symbol: (
id: c_node
ID:c_node
expr-id
unknown symbol: .
id: GetHas_Left
ID:GetHas_Left
unknown symbol: (
unknown symbol: )
unknown symbol: )
unknown symbol: {
space
id: ntb
ID:ntb
space
unknown symbol: =
space
id: c_node
ID:c_node
expr-id
unknown symbol: .
id: SetKey
ID:SetKey
unknown symbol: (
unknown symbol: (
id: c_node
ID:c_node
expr-id
unknown symbol: .
id: GetLeft
ID:GetLeft
unknown symbol: (
unknown symbol: )
unknown symbol: )
unknown symbol: .
id: GetKey
ID:GetKey
unknown symbol: (
unknown symbol: )
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: p_node
ID:p_node
space
unknown symbol: =
space
id: c_node
ID:c_node
expr-id
space
unknown symbol: ;
ex=ex
space
id: c_node
ID:c_node
space
unknown symbol: =
space
id: c_node
ID:c_node
expr-id
unknown symbol: .
id: GetLeft
ID:GetLeft
unknown symbol: (
unknown symbol: )
space
unknown symbol: ;
ex=ex
space
unknown symbol: }
Empty statement List
space
id: ntb
ID:ntb
space
unknown symbol: =
space
id: p_node
ID:p_node
expr-id
unknown symbol: .
id: SetLeft
ID:SetLeft
unknown symbol: (
id: my_null
ID:my_null
expr-id
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: ntb
ID:ntb
space
unknown symbol: =
space
id: p_node
ID:p_node
expr-id
unknown symbol: .
id: SetHas_Left
ID:SetHas_Left
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
Empty statement List
space
space
unknown symbol: ;
space
unknown symbol: }
space
publicspace
intspace
id: Search
ID:Search
unknown symbol: (
intspace
id: v_key
ID:v_key
unknown symbol: )
unknown symbol: {
space
id: Tree
ID:Tree
space
id: current_node
ID:current_node
space
unknown symbol: ;
VarDecl

space
intspace
id: ifound
ID:ifound
space
unknown symbol: ;
VarDecl

space
space
id: cont
ID:cont
space
unknown symbol: ;
VarDecl

space
intspace
id: key_aux
ID:key_aux
space
unknown symbol: ;
VarDecl

space
id: current_node
ID:current_node
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
id: cont
ID:cont
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
id: ifound
ID:ifound
space
unknown symbol: =
space
num: 0
space
unknown symbol: ;
ex=ex
space
space
unknown symbol: (
id: cont
ID:cont
expr-id
unknown symbol: )
unknown symbol: {
space
id: key_aux
ID:key_aux
space
unknown symbol: =
space
id: current_node
ID:current_node
expr-id
unknown symbol: .
id: GetKey
ID:GetKey
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
space
unknown symbol: (
id: v_key
ID:v_key
expr-id
space
unknown symbol: <
space
id: key_aux
ID:key_aux
expr-id
unknown symbol: )
space
space
unknown symbol: (
id: current_node
ID:current_node
expr-id
unknown symbol: .
id: GetHas_Left
ID:GetHas_Left
unknown symbol: (
unknown symbol: )
unknown symbol: )
space
id: current_node
ID:current_node
space
unknown symbol: =
space
id: current_node
ID:current_node
expr-id
unknown symbol: .
id: GetLeft
ID:GetLeft
unknown symbol: (
unknown symbol: )
space
unknown symbol: ;
ex=ex
space
space
id: cont
ID:cont
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
space
space
unknown symbol: (
id: key_aux
ID:key_aux
expr-id
space
unknown symbol: <
space
id: v_key
ID:v_key
expr-id
unknown symbol: )
space
space
unknown symbol: (
id: current_node
ID:current_node
expr-id
unknown symbol: .
id: GetHas_Right
ID:GetHas_Right
unknown symbol: (
unknown symbol: )
unknown symbol: )
space
id: current_node
ID:current_node
space
unknown symbol: =
space
id: current_node
ID:current_node
expr-id
unknown symbol: .
id: GetRight
ID:GetRight
unknown symbol: (
unknown symbol: )
space
unknown symbol: ;
ex=ex
space
space
id: cont
ID:cont
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
space
unknown symbol: {
space
id: ifound
ID:ifound
space
unknown symbol: =
space
num: 1
space
unknown symbol: ;
ex=ex
space
id: cont
ID:cont
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
unknown symbol: }
Empty statement List
space
unknown symbol: }
Empty statement List
space
Empty statement List
space
id: ifound
ID:ifound
expr-id
space
unknown symbol: ;
space
unknown symbol: }
space
publicspace
space
id: Print
ID:Print
unknown symbol: (
unknown symbol: )
unknown symbol: {
space
space
id: ntb
ID:ntb
space
unknown symbol: ;
VarDecl

space
id: Tree
ID:Tree
space
id: current_node
ID:current_node
space
unknown symbol: ;
VarDecl

space
id: current_node
ID:current_node
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
id: ntb
ID:ntb
space
unknown symbol: =
space
unknown symbol: .
id: RecPrint
ID:RecPrint
unknown symbol: (
id: current_node
ID:current_node
expr-id
unknown symbol: )
unknown symbol: ;
ex=ex
space
Empty statement List
space
space
unknown symbol: ;
space
unknown symbol: }
space
publicspace
space
id: RecPrint
ID:RecPrint
unknown symbol: (
id: Tree
ID:Tree
space
id: node
ID:node
unknown symbol: )
unknown symbol: {
space
space
id: ntb
ID:ntb
space
unknown symbol: ;
VarDecl

space
space
unknown symbol: (
id: node
ID:node
expr-id
unknown symbol: .
id: GetHas_Left
ID:GetHas_Left
unknown symbol: (
unknown symbol: )
unknown symbol: )
unknown symbol: {
space
id: ntb
ID:ntb
space
unknown symbol: =
space
unknown symbol: .
id: RecPrint
ID:RecPrint
unknown symbol: (
id: node
ID:node
expr-id
unknown symbol: .
id: GetLeft
ID:GetLeft
unknown symbol: (
unknown symbol: )
unknown symbol: )
unknown symbol: ;
ex=ex
space
unknown symbol: }
Empty statement List
space
space
id: ntb
ID:ntb
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
unknown symbol: (
id: node
ID:node
expr-id
unknown symbol: .
id: GetKey
ID:GetKey
unknown symbol: (
unknown symbol: )
unknown symbol: )
unknown symbol: ;
space
space
unknown symbol: (
id: node
ID:node
expr-id
unknown symbol: .
id: GetHas_Right
ID:GetHas_Right
unknown symbol: (
unknown symbol: )
unknown symbol: )
unknown symbol: {
space
id: ntb
ID:ntb
space
unknown symbol: =
space
unknown symbol: .
id: RecPrint
ID:RecPrint
unknown symbol: (
id: node
ID:node
expr-id
unknown symbol: .
id: GetRight
ID:GetRight
unknown symbol: (
unknown symbol: )
unknown symbol: )
unknown symbol: ;
ex=ex
space
unknown symbol: }
Empty statement List
space
space
id: ntb
ID:ntb
space
unknown symbol: =
space
space
unknown symbol: ;
ex=ex
space
Empty statement List
space
space
unknown symbol: ;
space
unknown symbol: }
space
publicspace
intspace
id: accept
ID:accept
unknown symbol: (
id: Visitor
ID:Visitor
space
id: v
ID:v
unknown symbol: )
unknown symbol: {
space
intspace
id: nti
ID:nti
space
unknown symbol: ;
VarDecl

space
unknown symbol: (
num: 333
unknown symbol: )
unknown symbol: ;
space
id: nti
ID:nti
space
unknown symbol: =
space
id: v
ID:v
expr-id
unknown symbol: .
id: visit
ID:visit
unknown symbol: (
unknown symbol: )
space
unknown symbol: ;
ex=ex
space
Empty statement List
space
num: 0
space
unknown symbol: ;
space
unknown symbol: }
space
unknown symbol: }
space
classspace
id: Visitor
ID:Visitor
space
unknown symbol: {
space
id: Tree
ID:Tree
space
id: l
ID:l
space
unknown symbol: ;
VarDecl

space
id: Tree
ID:Tree
space
id: r
ID:r
space
unknown symbol: ;
VarDecl

space
publicspace
intspace
id: visit
ID:visit
unknown symbol: (
id: Tree
ID:Tree
space
id: n
ID:n
unknown symbol: )
unknown symbol: {
space
intspace
id: nti
ID:nti
space
unknown symbol: ;
VarDecl

space
space
unknown symbol: (
id: n
ID:n
expr-id
unknown symbol: .
id: GetHas_Right
ID:GetHas_Right
unknown symbol: (
unknown symbol: )
unknown symbol: )
unknown symbol: {
space
id: r
ID:r
space
unknown symbol: =
space
id: n
ID:n
expr-id
unknown symbol: .
id: GetRight
ID:GetRight
unknown symbol: (
unknown symbol: )
space
unknown symbol: ;
ex=ex
space
id: nti
ID:nti
space
unknown symbol: =
space
id: r
ID:r
expr-id
unknown symbol: .
id: accept
ID:accept
unknown symbol: (
unknown symbol: )
space
unknown symbol: ;
ex=ex
space
unknown symbol: }
Empty statement List
space
space
id: nti
ID:nti
space
unknown symbol: =
space
num: 0
space
unknown symbol: ;
ex=ex
space
space
unknown symbol: (
id: n
ID:n
expr-id
unknown symbol: .
id: GetHas_Left
ID:GetHas_Left
unknown symbol: (
unknown symbol: )
unknown symbol: )
space
unknown symbol: {
space
id: l
ID:l
space
unknown symbol: =
space
id: n
ID:n
expr-id
unknown symbol: .
id: GetLeft
ID:GetLeft
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: nti
ID:nti
space
unknown symbol: =
space
id: l
ID:l
expr-id
unknown symbol: .
id: accept
ID:accept
unknown symbol: (
unknown symbol: )
space
unknown symbol: ;
ex=ex
space
unknown symbol: }
Empty statement List
space
space
id: nti
ID:nti
space
unknown symbol: =
space
num: 0
space
unknown symbol: ;
ex=ex
space
Empty statement List
space
num: 0
unknown symbol: ;
space
unknown symbol: }
space
unknown symbol: }
space
classspace
id: MyVisitor
ID:MyVisitor
space
space
id: Visitor
ID:Visitor
space
unknown symbol: {
space
publicspace
intspace
id: visit
ID:visit
unknown symbol: (
id: Tree
ID:Tree
space
id: n
ID:n
unknown symbol: )
unknown symbol: {
space
intspace
id: nti
ID:nti
space
unknown symbol: ;
VarDecl

space
space
unknown symbol: (
id: n
ID:n
expr-id
unknown symbol: .
id: GetHas_Right
ID:GetHas_Right
unknown symbol: (
unknown symbol: )
unknown symbol: )
unknown symbol: {
space
id: r
ID:r
space
unknown symbol: =
space
id: n
ID:n
expr-id
unknown symbol: .
id: GetRight
ID:GetRight
unknown symbol: (
unknown symbol: )
space
unknown symbol: ;
ex=ex
space
id: nti
ID:nti
space
unknown symbol: =
space
id: r
ID:r
expr-id
unknown symbol: .
id: accept
ID:accept
unknown symbol: (
unknown symbol: )
space
unknown symbol: ;
ex=ex
space
unknown symbol: }
Empty statement List
space
space
id: nti
ID:nti
space
unknown symbol: =
space
num: 0
space
unknown symbol: ;
ex=ex
space
unknown symbol: (
id: n
ID:n
expr-id
unknown symbol: .
id: GetKey
ID:GetKey
unknown symbol: (
unknown symbol: )
unknown symbol: )
unknown symbol: ;
space
space
unknown symbol: (
id: n
ID:n
expr-id
unknown symbol: .
id: GetHas_Left
ID:GetHas_Left
unknown symbol: (
unknown symbol: )
unknown symbol: )
space
unknown symbol: {
space
id: l
ID:l
space
unknown symbol: =
space
id: n
ID:n
expr-id
unknown symbol: .
id: GetLeft
ID:GetLeft
unknown symbol: (
unknown symbol: )
unknown symbol: ;
ex=ex
space
id: nti
ID:nti
space
unknown symbol: =
id: l
ID:l
expr-id
unknown symbol: .
id: accept
ID:accept
unknown symbol: (
unknown symbol: )
space
unknown symbol: ;
ex=ex
space
unknown symbol: }
Empty statement List
space
space
id: nti
ID:nti
space
unknown symbol: =
space
num: 0
space
unknown symbol: ;
ex=ex
space
Empty statement List
space
num: 0
unknown symbol: ;
space
unknown symbol: }
space
unknown symbol: }

TableBuilder:
[Table builder] Node type - CMethodDecl. Method visit already defined in base class visit. Line: 372  Columns: 5-5
Segmentation fault (core dumped)
<end of output>
Test time =   1.08 sec
----------------------------------------------------------
Test Failed.
"graph_/home/tna0y/Desktop/Compiler/tests/examples/test_tree_visitor" end time: Dec 24 05:05 MSK
"graph_/home/tna0y/Desktop/Compiler/tests/examples/test_tree_visitor" time elapsed: 00:00:01
----------------------------------------------------------

6/32 Testing: bad_/home/tna0y/Desktop/Compiler/tests/bad/lc-1.java
6/32 Test: bad_/home/tna0y/Desktop/Compiler/tests/bad/lc-1.java
Command: "/usr/bin/valgrind" "--log-file=/home/tna0y/Desktop/Compiler/Testing/Temporary/MemoryChecker.6.log" "-q" "--tool=memcheck" "--leak-check=yes" "--show-reachable=yes" "--num-callers=50" "/home/tna0y/Desktop/Compiler/tests/test.sh" "/home/tna0y/Desktop/Compiler/tests/bad/lc-1.java" "1"
Directory: /home/tna0y/Desktop/Compiler
"bad_/home/tna0y/Desktop/Compiler/tests/bad/lc-1.java" start time: Dec 24 05:05 MSK
Output:
----------------------------------------------------------
<end of output>
Test time =   1.10 sec
----------------------------------------------------------
Test Passed.
"bad_/home/tna0y/Desktop/Compiler/tests/bad/lc-1.java" end time: Dec 24 05:05 MSK
"bad_/home/tna0y/Desktop/Compiler/tests/bad/lc-1.java" time elapsed: 00:00:01
----------------------------------------------------------

7/32 Testing: bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-001.java
7/32 Test: bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-001.java
Command: "/usr/bin/valgrind" "--log-file=/home/tna0y/Desktop/Compiler/Testing/Temporary/MemoryChecker.7.log" "-q" "--tool=memcheck" "--leak-check=yes" "--show-reachable=yes" "--num-callers=50" "/home/tna0y/Desktop/Compiler/tests/test.sh" "/home/tna0y/Desktop/Compiler/tests/bad/tc-001.java" "1"
Directory: /home/tna0y/Desktop/Compiler
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-001.java" start time: Dec 24 05:05 MSK
Output:
----------------------------------------------------------
<end of output>
Test time =   1.05 sec
----------------------------------------------------------
Test Passed.
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-001.java" end time: Dec 24 05:06 MSK
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-001.java" time elapsed: 00:00:01
----------------------------------------------------------

8/32 Testing: bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-002.java
8/32 Test: bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-002.java
Command: "/usr/bin/valgrind" "--log-file=/home/tna0y/Desktop/Compiler/Testing/Temporary/MemoryChecker.8.log" "-q" "--tool=memcheck" "--leak-check=yes" "--show-reachable=yes" "--num-callers=50" "/home/tna0y/Desktop/Compiler/tests/test.sh" "/home/tna0y/Desktop/Compiler/tests/bad/tc-002.java" "1"
Directory: /home/tna0y/Desktop/Compiler
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-002.java" start time: Dec 24 05:06 MSK
Output:
----------------------------------------------------------
<end of output>
Test time =   1.03 sec
----------------------------------------------------------
Test Passed.
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-002.java" end time: Dec 24 05:06 MSK
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-002.java" time elapsed: 00:00:01
----------------------------------------------------------

9/32 Testing: bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-003.java
9/32 Test: bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-003.java
Command: "/usr/bin/valgrind" "--log-file=/home/tna0y/Desktop/Compiler/Testing/Temporary/MemoryChecker.9.log" "-q" "--tool=memcheck" "--leak-check=yes" "--show-reachable=yes" "--num-callers=50" "/home/tna0y/Desktop/Compiler/tests/test.sh" "/home/tna0y/Desktop/Compiler/tests/bad/tc-003.java" "1"
Directory: /home/tna0y/Desktop/Compiler
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-003.java" start time: Dec 24 05:06 MSK
Output:
----------------------------------------------------------
<end of output>
Test time =   1.07 sec
----------------------------------------------------------
Test Passed.
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-003.java" end time: Dec 24 05:06 MSK
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-003.java" time elapsed: 00:00:01
----------------------------------------------------------

10/32 Testing: bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-004.java
10/32 Test: bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-004.java
Command: "/usr/bin/valgrind" "--log-file=/home/tna0y/Desktop/Compiler/Testing/Temporary/MemoryChecker.10.log" "-q" "--tool=memcheck" "--leak-check=yes" "--show-reachable=yes" "--num-callers=50" "/home/tna0y/Desktop/Compiler/tests/test.sh" "/home/tna0y/Desktop/Compiler/tests/bad/tc-004.java" "1"
Directory: /home/tna0y/Desktop/Compiler
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-004.java" start time: Dec 24 05:06 MSK
Output:
----------------------------------------------------------
<end of output>
Test time =   1.09 sec
----------------------------------------------------------
Test Passed.
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-004.java" end time: Dec 24 05:06 MSK
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-004.java" time elapsed: 00:00:01
----------------------------------------------------------

11/32 Testing: bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-005.java
11/32 Test: bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-005.java
Command: "/usr/bin/valgrind" "--log-file=/home/tna0y/Desktop/Compiler/Testing/Temporary/MemoryChecker.11.log" "-q" "--tool=memcheck" "--leak-check=yes" "--show-reachable=yes" "--num-callers=50" "/home/tna0y/Desktop/Compiler/tests/test.sh" "/home/tna0y/Desktop/Compiler/tests/bad/tc-005.java" "1"
Directory: /home/tna0y/Desktop/Compiler
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-005.java" start time: Dec 24 05:06 MSK
Output:
----------------------------------------------------------
<end of output>
Test time =   1.06 sec
----------------------------------------------------------
Test Passed.
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-005.java" end time: Dec 24 05:06 MSK
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-005.java" time elapsed: 00:00:01
----------------------------------------------------------

12/32 Testing: bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-006.java
12/32 Test: bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-006.java
Command: "/usr/bin/valgrind" "--log-file=/home/tna0y/Desktop/Compiler/Testing/Temporary/MemoryChecker.12.log" "-q" "--tool=memcheck" "--leak-check=yes" "--show-reachable=yes" "--num-callers=50" "/home/tna0y/Desktop/Compiler/tests/test.sh" "/home/tna0y/Desktop/Compiler/tests/bad/tc-006.java" "1"
Directory: /home/tna0y/Desktop/Compiler
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-006.java" start time: Dec 24 05:06 MSK
Output:
----------------------------------------------------------
<end of output>
Test time =   1.10 sec
----------------------------------------------------------
Test Passed.
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-006.java" end time: Dec 24 05:06 MSK
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-006.java" time elapsed: 00:00:01
----------------------------------------------------------

13/32 Testing: bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-007.java
13/32 Test: bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-007.java
Command: "/usr/bin/valgrind" "--log-file=/home/tna0y/Desktop/Compiler/Testing/Temporary/MemoryChecker.13.log" "-q" "--tool=memcheck" "--leak-check=yes" "--show-reachable=yes" "--num-callers=50" "/home/tna0y/Desktop/Compiler/tests/test.sh" "/home/tna0y/Desktop/Compiler/tests/bad/tc-007.java" "1"
Directory: /home/tna0y/Desktop/Compiler
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-007.java" start time: Dec 24 05:06 MSK
Output:
----------------------------------------------------------
<end of output>
Test time =   1.08 sec
----------------------------------------------------------
Test Passed.
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-007.java" end time: Dec 24 05:06 MSK
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-007.java" time elapsed: 00:00:01
----------------------------------------------------------

14/32 Testing: bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-008.java
14/32 Test: bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-008.java
Command: "/usr/bin/valgrind" "--log-file=/home/tna0y/Desktop/Compiler/Testing/Temporary/MemoryChecker.14.log" "-q" "--tool=memcheck" "--leak-check=yes" "--show-reachable=yes" "--num-callers=50" "/home/tna0y/Desktop/Compiler/tests/test.sh" "/home/tna0y/Desktop/Compiler/tests/bad/tc-008.java" "1"
Directory: /home/tna0y/Desktop/Compiler
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-008.java" start time: Dec 24 05:06 MSK
Output:
----------------------------------------------------------
<end of output>
Test time =   1.08 sec
----------------------------------------------------------
Test Passed.
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-008.java" end time: Dec 24 05:06 MSK
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-008.java" time elapsed: 00:00:01
----------------------------------------------------------

15/32 Testing: bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-009.java
15/32 Test: bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-009.java
Command: "/usr/bin/valgrind" "--log-file=/home/tna0y/Desktop/Compiler/Testing/Temporary/MemoryChecker.15.log" "-q" "--tool=memcheck" "--leak-check=yes" "--show-reachable=yes" "--num-callers=50" "/home/tna0y/Desktop/Compiler/tests/test.sh" "/home/tna0y/Desktop/Compiler/tests/bad/tc-009.java" "1"
Directory: /home/tna0y/Desktop/Compiler
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-009.java" start time: Dec 24 05:06 MSK
Output:
----------------------------------------------------------
<end of output>
Test time =   1.07 sec
----------------------------------------------------------
Test Passed.
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-009.java" end time: Dec 24 05:06 MSK
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-009.java" time elapsed: 00:00:01
----------------------------------------------------------

16/32 Testing: bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-010.java
16/32 Test: bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-010.java
Command: "/usr/bin/valgrind" "--log-file=/home/tna0y/Desktop/Compiler/Testing/Temporary/MemoryChecker.16.log" "-q" "--tool=memcheck" "--leak-check=yes" "--show-reachable=yes" "--num-callers=50" "/home/tna0y/Desktop/Compiler/tests/test.sh" "/home/tna0y/Desktop/Compiler/tests/bad/tc-010.java" "1"
Directory: /home/tna0y/Desktop/Compiler
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-010.java" start time: Dec 24 05:06 MSK
Output:
----------------------------------------------------------
<end of output>
Test time =   1.02 sec
----------------------------------------------------------
Test Passed.
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-010.java" end time: Dec 24 05:06 MSK
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-010.java" time elapsed: 00:00:01
----------------------------------------------------------

17/32 Testing: bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-011.java
17/32 Test: bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-011.java
Command: "/usr/bin/valgrind" "--log-file=/home/tna0y/Desktop/Compiler/Testing/Temporary/MemoryChecker.17.log" "-q" "--tool=memcheck" "--leak-check=yes" "--show-reachable=yes" "--num-callers=50" "/home/tna0y/Desktop/Compiler/tests/test.sh" "/home/tna0y/Desktop/Compiler/tests/bad/tc-011.java" "1"
Directory: /home/tna0y/Desktop/Compiler
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-011.java" start time: Dec 24 05:06 MSK
Output:
----------------------------------------------------------
<end of output>
Test time =   1.07 sec
----------------------------------------------------------
Test Passed.
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-011.java" end time: Dec 24 05:06 MSK
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-011.java" time elapsed: 00:00:01
----------------------------------------------------------

18/32 Testing: bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-012.java
18/32 Test: bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-012.java
Command: "/usr/bin/valgrind" "--log-file=/home/tna0y/Desktop/Compiler/Testing/Temporary/MemoryChecker.18.log" "-q" "--tool=memcheck" "--leak-check=yes" "--show-reachable=yes" "--num-callers=50" "/home/tna0y/Desktop/Compiler/tests/test.sh" "/home/tna0y/Desktop/Compiler/tests/bad/tc-012.java" "1"
Directory: /home/tna0y/Desktop/Compiler
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-012.java" start time: Dec 24 05:06 MSK
Output:
----------------------------------------------------------
<end of output>
Test time =   1.07 sec
----------------------------------------------------------
Test Passed.
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-012.java" end time: Dec 24 05:06 MSK
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-012.java" time elapsed: 00:00:01
----------------------------------------------------------

19/32 Testing: bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-013.java
19/32 Test: bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-013.java
Command: "/usr/bin/valgrind" "--log-file=/home/tna0y/Desktop/Compiler/Testing/Temporary/MemoryChecker.19.log" "-q" "--tool=memcheck" "--leak-check=yes" "--show-reachable=yes" "--num-callers=50" "/home/tna0y/Desktop/Compiler/tests/test.sh" "/home/tna0y/Desktop/Compiler/tests/bad/tc-013.java" "1"
Directory: /home/tna0y/Desktop/Compiler
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-013.java" start time: Dec 24 05:06 MSK
Output:
----------------------------------------------------------
<end of output>
Test time =   1.04 sec
----------------------------------------------------------
Test Passed.
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-013.java" end time: Dec 24 05:06 MSK
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-013.java" time elapsed: 00:00:01
----------------------------------------------------------

20/32 Testing: bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-014.java
20/32 Test: bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-014.java
Command: "/usr/bin/valgrind" "--log-file=/home/tna0y/Desktop/Compiler/Testing/Temporary/MemoryChecker.20.log" "-q" "--tool=memcheck" "--leak-check=yes" "--show-reachable=yes" "--num-callers=50" "/home/tna0y/Desktop/Compiler/tests/test.sh" "/home/tna0y/Desktop/Compiler/tests/bad/tc-014.java" "1"
Directory: /home/tna0y/Desktop/Compiler
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-014.java" start time: Dec 24 05:06 MSK
Output:
----------------------------------------------------------
<end of output>
Test time =   1.05 sec
----------------------------------------------------------
Test Passed.
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-014.java" end time: Dec 24 05:06 MSK
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-014.java" time elapsed: 00:00:01
----------------------------------------------------------

21/32 Testing: bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-015.java
21/32 Test: bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-015.java
Command: "/usr/bin/valgrind" "--log-file=/home/tna0y/Desktop/Compiler/Testing/Temporary/MemoryChecker.21.log" "-q" "--tool=memcheck" "--leak-check=yes" "--show-reachable=yes" "--num-callers=50" "/home/tna0y/Desktop/Compiler/tests/test.sh" "/home/tna0y/Desktop/Compiler/tests/bad/tc-015.java" "1"
Directory: /home/tna0y/Desktop/Compiler
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-015.java" start time: Dec 24 05:06 MSK
Output:
----------------------------------------------------------
<end of output>
Test time =   1.05 sec
----------------------------------------------------------
Test Passed.
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-015.java" end time: Dec 24 05:06 MSK
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-015.java" time elapsed: 00:00:01
----------------------------------------------------------

22/32 Testing: bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-11a.java
22/32 Test: bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-11a.java
Command: "/usr/bin/valgrind" "--log-file=/home/tna0y/Desktop/Compiler/Testing/Temporary/MemoryChecker.22.log" "-q" "--tool=memcheck" "--leak-check=yes" "--show-reachable=yes" "--num-callers=50" "/home/tna0y/Desktop/Compiler/tests/test.sh" "/home/tna0y/Desktop/Compiler/tests/bad/tc-11a.java" "1"
Directory: /home/tna0y/Desktop/Compiler
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-11a.java" start time: Dec 24 05:06 MSK
Output:
----------------------------------------------------------
<end of output>
Test time =   1.15 sec
----------------------------------------------------------
Test Passed.
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-11a.java" end time: Dec 24 05:06 MSK
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-11a.java" time elapsed: 00:00:01
----------------------------------------------------------

23/32 Testing: bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-13a.java
23/32 Test: bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-13a.java
Command: "/usr/bin/valgrind" "--log-file=/home/tna0y/Desktop/Compiler/Testing/Temporary/MemoryChecker.23.log" "-q" "--tool=memcheck" "--leak-check=yes" "--show-reachable=yes" "--num-callers=50" "/home/tna0y/Desktop/Compiler/tests/test.sh" "/home/tna0y/Desktop/Compiler/tests/bad/tc-13a.java" "1"
Directory: /home/tna0y/Desktop/Compiler
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-13a.java" start time: Dec 24 05:06 MSK
Output:
----------------------------------------------------------
<end of output>
Test time =   1.04 sec
----------------------------------------------------------
Test Passed.
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-13a.java" end time: Dec 24 05:06 MSK
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-13a.java" time elapsed: 00:00:01
----------------------------------------------------------

24/32 Testing: bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-2a.java
24/32 Test: bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-2a.java
Command: "/usr/bin/valgrind" "--log-file=/home/tna0y/Desktop/Compiler/Testing/Temporary/MemoryChecker.24.log" "-q" "--tool=memcheck" "--leak-check=yes" "--show-reachable=yes" "--num-callers=50" "/home/tna0y/Desktop/Compiler/tests/test.sh" "/home/tna0y/Desktop/Compiler/tests/bad/tc-2a.java" "1"
Directory: /home/tna0y/Desktop/Compiler
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-2a.java" start time: Dec 24 05:06 MSK
Output:
----------------------------------------------------------
<end of output>
Test time =   1.06 sec
----------------------------------------------------------
Test Passed.
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-2a.java" end time: Dec 24 05:06 MSK
"bad_/home/tna0y/Desktop/Compiler/tests/bad/tc-2a.java" time elapsed: 00:00:01
----------------------------------------------------------

25/32 Testing: good_/home/tna0y/Desktop/Compiler/tests/good/binary-search.java
25/32 Test: good_/home/tna0y/Desktop/Compiler/tests/good/binary-search.java
Command: "/usr/bin/valgrind" "--log-file=/home/tna0y/Desktop/Compiler/Testing/Temporary/MemoryChecker.25.log" "-q" "--tool=memcheck" "--leak-check=yes" "--show-reachable=yes" "--num-callers=50" "/home/tna0y/Desktop/Compiler/tests/test.sh" "/home/tna0y/Desktop/Compiler/tests/good/binary-search.java" "0"
Directory: /home/tna0y/Desktop/Compiler
"good_/home/tna0y/Desktop/Compiler/tests/good/binary-search.java" start time: Dec 24 05:06 MSK
Output:
----------------------------------------------------------
<end of output>
Test time =   0.91 sec
----------------------------------------------------------
Test Passed.
"good_/home/tna0y/Desktop/Compiler/tests/good/binary-search.java" end time: Dec 24 05:06 MSK
"good_/home/tna0y/Desktop/Compiler/tests/good/binary-search.java" time elapsed: 00:00:00
----------------------------------------------------------

26/32 Testing: good_/home/tna0y/Desktop/Compiler/tests/good/binary-tree.java
26/32 Test: good_/home/tna0y/Desktop/Compiler/tests/good/binary-tree.java
Command: "/usr/bin/valgrind" "--log-file=/home/tna0y/Desktop/Compiler/Testing/Temporary/MemoryChecker.26.log" "-q" "--tool=memcheck" "--leak-check=yes" "--show-reachable=yes" "--num-callers=50" "/home/tna0y/Desktop/Compiler/tests/test.sh" "/home/tna0y/Desktop/Compiler/tests/good/binary-tree.java" "0"
Directory: /home/tna0y/Desktop/Compiler
"good_/home/tna0y/Desktop/Compiler/tests/good/binary-tree.java" start time: Dec 24 05:06 MSK
Output:
----------------------------------------------------------
<end of output>
Test time =   0.87 sec
----------------------------------------------------------
Test Passed.
"good_/home/tna0y/Desktop/Compiler/tests/good/binary-tree.java" end time: Dec 24 05:06 MSK
"good_/home/tna0y/Desktop/Compiler/tests/good/binary-tree.java" time elapsed: 00:00:00
----------------------------------------------------------

27/32 Testing: good_/home/tna0y/Desktop/Compiler/tests/good/bubble-sort.java
27/32 Test: good_/home/tna0y/Desktop/Compiler/tests/good/bubble-sort.java
Command: "/usr/bin/valgrind" "--log-file=/home/tna0y/Desktop/Compiler/Testing/Temporary/MemoryChecker.27.log" "-q" "--tool=memcheck" "--leak-check=yes" "--show-reachable=yes" "--num-callers=50" "/home/tna0y/Desktop/Compiler/tests/test.sh" "/home/tna0y/Desktop/Compiler/tests/good/bubble-sort.java" "0"
Directory: /home/tna0y/Desktop/Compiler
"good_/home/tna0y/Desktop/Compiler/tests/good/bubble-sort.java" start time: Dec 24 05:06 MSK
Output:
----------------------------------------------------------
<end of output>
Test time =   0.88 sec
----------------------------------------------------------
Test Passed.
"good_/home/tna0y/Desktop/Compiler/tests/good/bubble-sort.java" end time: Dec 24 05:06 MSK
"good_/home/tna0y/Desktop/Compiler/tests/good/bubble-sort.java" time elapsed: 00:00:00
----------------------------------------------------------

28/32 Testing: good_/home/tna0y/Desktop/Compiler/tests/good/factorial.java
28/32 Test: good_/home/tna0y/Desktop/Compiler/tests/good/factorial.java
Command: "/usr/bin/valgrind" "--log-file=/home/tna0y/Desktop/Compiler/Testing/Temporary/MemoryChecker.28.log" "-q" "--tool=memcheck" "--leak-check=yes" "--show-reachable=yes" "--num-callers=50" "/home/tna0y/Desktop/Compiler/tests/test.sh" "/home/tna0y/Desktop/Compiler/tests/good/factorial.java" "0"
Directory: /home/tna0y/Desktop/Compiler
"good_/home/tna0y/Desktop/Compiler/tests/good/factorial.java" start time: Dec 24 05:06 MSK
Output:
----------------------------------------------------------
<end of output>
Test time =   0.90 sec
----------------------------------------------------------
Test Passed.
"good_/home/tna0y/Desktop/Compiler/tests/good/factorial.java" end time: Dec 24 05:06 MSK
"good_/home/tna0y/Desktop/Compiler/tests/good/factorial.java" time elapsed: 00:00:00
----------------------------------------------------------

29/32 Testing: good_/home/tna0y/Desktop/Compiler/tests/good/linear-search.java
29/32 Test: good_/home/tna0y/Desktop/Compiler/tests/good/linear-search.java
Command: "/usr/bin/valgrind" "--log-file=/home/tna0y/Desktop/Compiler/Testing/Temporary/MemoryChecker.29.log" "-q" "--tool=memcheck" "--leak-check=yes" "--show-reachable=yes" "--num-callers=50" "/home/tna0y/Desktop/Compiler/tests/test.sh" "/home/tna0y/Desktop/Compiler/tests/good/linear-search.java" "0"
Directory: /home/tna0y/Desktop/Compiler
"good_/home/tna0y/Desktop/Compiler/tests/good/linear-search.java" start time: Dec 24 05:06 MSK
Output:
----------------------------------------------------------
<end of output>
Test time =   0.88 sec
----------------------------------------------------------
Test Passed.
"good_/home/tna0y/Desktop/Compiler/tests/good/linear-search.java" end time: Dec 24 05:06 MSK
"good_/home/tna0y/Desktop/Compiler/tests/good/linear-search.java" time elapsed: 00:00:00
----------------------------------------------------------

30/32 Testing: good_/home/tna0y/Desktop/Compiler/tests/good/linked-list.java
30/32 Test: good_/home/tna0y/Desktop/Compiler/tests/good/linked-list.java
Command: "/usr/bin/valgrind" "--log-file=/home/tna0y/Desktop/Compiler/Testing/Temporary/MemoryChecker.30.log" "-q" "--tool=memcheck" "--leak-check=yes" "--show-reachable=yes" "--num-callers=50" "/home/tna0y/Desktop/Compiler/tests/test.sh" "/home/tna0y/Desktop/Compiler/tests/good/linked-list.java" "0"
Directory: /home/tna0y/Desktop/Compiler
"good_/home/tna0y/Desktop/Compiler/tests/good/linked-list.java" start time: Dec 24 05:06 MSK
Output:
----------------------------------------------------------
<end of output>
Test time =   0.91 sec
----------------------------------------------------------
Test Passed.
"good_/home/tna0y/Desktop/Compiler/tests/good/linked-list.java" end time: Dec 24 05:06 MSK
"good_/home/tna0y/Desktop/Compiler/tests/good/linked-list.java" time elapsed: 00:00:00
----------------------------------------------------------

31/32 Testing: good_/home/tna0y/Desktop/Compiler/tests/good/quick-sort.java
31/32 Test: good_/home/tna0y/Desktop/Compiler/tests/good/quick-sort.java
Command: "/usr/bin/valgrind" "--log-file=/home/tna0y/Desktop/Compiler/Testing/Temporary/MemoryChecker.31.log" "-q" "--tool=memcheck" "--leak-check=yes" "--show-reachable=yes" "--num-callers=50" "/home/tna0y/Desktop/Compiler/tests/test.sh" "/home/tna0y/Desktop/Compiler/tests/good/quick-sort.java" "0"
Directory: /home/tna0y/Desktop/Compiler
"good_/home/tna0y/Desktop/Compiler/tests/good/quick-sort.java" start time: Dec 24 05:06 MSK
Output:
----------------------------------------------------------
<end of output>
Test time =   0.90 sec
----------------------------------------------------------
Test Passed.
"good_/home/tna0y/Desktop/Compiler/tests/good/quick-sort.java" end time: Dec 24 05:06 MSK
"good_/home/tna0y/Desktop/Compiler/tests/good/quick-sort.java" time elapsed: 00:00:00
----------------------------------------------------------

32/32 Testing: good_/home/tna0y/Desktop/Compiler/tests/good/tree-visitor.java
32/32 Test: good_/home/tna0y/Desktop/Compiler/tests/good/tree-visitor.java
Command: "/usr/bin/valgrind" "--log-file=/home/tna0y/Desktop/Compiler/Testing/Temporary/MemoryChecker.32.log" "-q" "--tool=memcheck" "--leak-check=yes" "--show-reachable=yes" "--num-callers=50" "/home/tna0y/Desktop/Compiler/tests/test.sh" "/home/tna0y/Desktop/Compiler/tests/good/tree-visitor.java" "0"
Directory: /home/tna0y/Desktop/Compiler
"good_/home/tna0y/Desktop/Compiler/tests/good/tree-visitor.java" start time: Dec 24 05:06 MSK
Output:
----------------------------------------------------------
<end of output>
Test time =   1.08 sec
----------------------------------------------------------
Test Failed.
"good_/home/tna0y/Desktop/Compiler/tests/good/tree-visitor.java" end time: Dec 24 05:06 MSK
"good_/home/tna0y/Desktop/Compiler/tests/good/tree-visitor.java" time elapsed: 00:00:01
----------------------------------------------------------

End testing: Dec 24 05:06 MSK
