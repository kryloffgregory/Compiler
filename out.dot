strict graph {
0 [label="Program"];
0 -- 2
2 [label="MainClass:LinkedList"];
2 -- 3
3 [label="String[] : a"];
2 -- 4
4 [label="="];
4 -- 5
5 [label="lvalue : d"];
4 -- 6
6 [label="const : 0"];
2 -- 7
7 [label="System.out.Println"];
7 -- 8
8 [label="call method"];
8 -- 9
9 [label="new"];
9 [label="class : LL"];
9 [label="method : Start"];
0 -- 10
10 [label="ClassDeclaration: Element"];
10 -- 11
11 [label="Variable"];
11 -- 12
12 [label="Int"];
12 [label="ID : Age"];
10 -- 13
13 [label="Variable"];
13 -- 14
14 [label="Int"];
14 [label="ID : Salary"];
10 -- 15
15 [label="Variable"];
15 -- 16
16 [label="Bool"];
16 [label="ID : Married"];
10 -- 17
17 [label="Method: Init"];
17 -- 18
18 [label="Bool"];
17 -- 19
19 [label="argument"];
19 -- 20
20 [label="Int"];
20 [label="ID : v_Age"];
17 -- 21
21 [label="argument"];
21 -- 22
22 [label="Int"];
22 [label="ID : v_Salary"];
17 -- 23
23 [label="argument"];
23 -- 24
24 [label="Bool"];
24 [label="ID : v_Married"];
17 -- 25
25 [label="="];
25 -- 26
26 [label="lvalue : Age"];
25 -- 27
27 [label="ID : v_Age"];
17 -- 28
28 [label="="];
28 -- 29
29 [label="lvalue : Salary"];
28 -- 30
30 [label="ID : v_Salary"];
17 -- 31
31 [label="="];
31 -- 32
32 [label="lvalue : Married"];
31 -- 33
33 [label="ID : v_Married"];
17 -- 34
34 [label="const : 1"];
10 -- 35
35 [label="Method: GetAge"];
35 -- 36
36 [label="Int"];
35 -- 37
37 [label="ID : Age"];
10 -- 38
38 [label="Method: GetSalary"];
38 -- 39
39 [label="Int"];
38 -- 40
40 [label="ID : Salary"];
10 -- 41
41 [label="Method: GetMarried"];
41 -- 42
42 [label="Bool"];
41 -- 43
43 [label="ID : Married"];
10 -- 44
44 [label="Method: Equal"];
44 -- 45
45 [label="Bool"];
44 -- 46
46 [label="argument"];
46 -- 47
47 [label="type : Element"];
47 [label="ID : other"];
44 -- 48
48 [label="Variable"];
48 -- 49
49 [label="Bool"];
49 [label="ID : ret_val"];
44 -- 50
50 [label="Variable"];
50 -- 51
51 [label="Int"];
51 [label="ID : aux01"];
44 -- 52
52 [label="Variable"];
52 -- 53
53 [label="Int"];
53 [label="ID : aux02"];
44 -- 54
54 [label="Variable"];
54 -- 55
55 [label="Int"];
55 [label="ID : nt"];
44 -- 56
56 [label="="];
56 -- 57
57 [label="lvalue : ret_val"];
56 -- 58
58 [label="const : 1"];
44 -- 59
59 [label="="];
59 -- 60
60 [label="lvalue : aux01"];
59 -- 61
61 [label="call method"];
61 -- 62
62 [label="ID : other"];
62 [label="method : GetAge"];
44 -- 63
63 [label="if-then-else"];
63 -- 64
64 [label="not"];
64 [label="-"];
64 -- 65
65 [label="()"];
65 -- 66
66 [label="call method"];
66 -- 67
67 [label="this : "];
67 [label="method : Compare"];
66 -- 68
68 [label="ID : aux01"];
66 -- 69
69 [label="ID : Age"];
63 -- 70
70 [label="="];
70 -- 71
71 [label="lvalue : ret_val"];
70 -- 72
72 [label="const : 0"];
63 -- 73
73 [label="{   }"];
73 -- 74
74 [label="="];
74 -- 75
75 [label="lvalue : aux02"];
74 -- 76
76 [label="call method"];
76 -- 77
77 [label="ID : other"];
77 [label="method : GetSalary"];
73 -- 78
78 [label="if-then-else"];
78 -- 79
79 [label="not"];
79 [label="-"];
79 -- 80
80 [label="call method"];
80 -- 81
81 [label="this : "];
81 [label="method : Compare"];
80 -- 82
82 [label="ID : aux02"];
80 -- 83
83 [label="ID : Salary"];
78 -- 84
84 [label="="];
84 -- 85
85 [label="lvalue : ret_val"];
84 -- 86
86 [label="const : 0"];
78 -- 87
87 [label="if-then-else"];
87 -- 88
88 [label="ID : Married"];
87 -- 89
89 [label="if-then-else"];
89 -- 90
90 [label="not"];
90 [label="-"];
90 -- 91
91 [label="call method"];
91 -- 92
92 [label="ID : other"];
92 [label="method : GetMarried"];
89 -- 93
93 [label="="];
93 -- 94
94 [label="lvalue : ret_val"];
93 -- 95
95 [label="const : 0"];
89 -- 96
96 [label="="];
96 -- 97
97 [label="lvalue : nt"];
96 -- 98
98 [label="const : 0"];
87 -- 99
99 [label="if-then-else"];
99 -- 100
100 [label="call method"];
100 -- 101
101 [label="ID : other"];
101 [label="method : GetMarried"];
99 -- 102
102 [label="="];
102 -- 103
103 [label="lvalue : ret_val"];
102 -- 104
104 [label="const : 0"];
99 -- 105
105 [label="="];
105 -- 106
106 [label="lvalue : nt"];
105 -- 107
107 [label="const : 0"];
44 -- 108
108 [label="ID : ret_val"];
10 -- 109
109 [label="Method: Compare"];
109 -- 110
110 [label="Bool"];
109 -- 111
111 [label="argument"];
111 -- 112
112 [label="Int"];
112 [label="ID : num1"];
109 -- 113
113 [label="argument"];
113 -- 114
114 [label="Int"];
114 [label="ID : num2"];
109 -- 115
115 [label="Variable"];
115 -- 116
116 [label="Bool"];
116 [label="ID : retval"];
109 -- 117
117 [label="Variable"];
117 -- 118
118 [label="Int"];
118 [label="ID : aux02"];
109 -- 119
119 [label="="];
119 -- 120
120 [label="lvalue : retval"];
119 -- 121
121 [label="const : 0"];
109 -- 122
122 [label="="];
122 -- 123
123 [label="lvalue : aux02"];
122 -- 124
124 [label="+"];
124 -- 125
125 [label="ID : num2"];
124 -- 126
126 [label="const : 1"];
109 -- 127
127 [label="if-then-else"];
127 -- 128
128 [label="<"];
128 -- 129
129 [label="ID : num1"];
128 -- 130
130 [label="ID : num2"];
127 -- 131
131 [label="="];
131 -- 132
132 [label="lvalue : retval"];
131 -- 133
133 [label="const : 0"];
127 -- 134
134 [label="if-then-else"];
134 -- 135
135 [label="not"];
135 [label="-"];
135 -- 136
136 [label="()"];
136 -- 137
137 [label="<"];
137 -- 138
138 [label="ID : num1"];
137 -- 139
139 [label="ID : aux02"];
134 -- 140
140 [label="="];
140 -- 141
141 [label="lvalue : retval"];
140 -- 142
142 [label="const : 0"];
134 -- 143
143 [label="="];
143 -- 144
144 [label="lvalue : retval"];
143 -- 145
145 [label="const : 1"];
109 -- 146
146 [label="ID : retval"];
0 -- 147
147 [label="ClassDeclaration: List"];
147 -- 148
148 [label="Variable"];
148 -- 149
149 [label="type : Element"];
149 [label="ID : elem"];
147 -- 150
150 [label="Variable"];
150 -- 151
151 [label="type : List"];
151 [label="ID : next"];
147 -- 152
152 [label="Variable"];
152 -- 153
153 [label="Bool"];
153 [label="ID : end"];
147 -- 154
154 [label="Method: Init"];
154 -- 155
155 [label="Bool"];
154 -- 156
156 [label="="];
156 -- 157
157 [label="lvalue : end"];
156 -- 158
158 [label="const : 1"];
154 -- 159
159 [label="const : 1"];
147 -- 160
160 [label="Method: InitNew"];
160 -- 161
161 [label="Bool"];
160 -- 162
162 [label="argument"];
162 -- 163
163 [label="type : Element"];
163 [label="ID : v_elem"];
160 -- 164
164 [label="argument"];
164 -- 165
165 [label="type : List"];
165 [label="ID : v_next"];
160 -- 166
166 [label="argument"];
166 -- 167
167 [label="Bool"];
167 [label="ID : v_end"];
160 -- 168
168 [label="="];
168 -- 169
169 [label="lvalue : end"];
168 -- 170
170 [label="ID : v_end"];
160 -- 171
171 [label="="];
171 -- 172
172 [label="lvalue : elem"];
171 -- 173
173 [label="ID : v_elem"];
160 -- 174
174 [label="="];
174 -- 175
175 [label="lvalue : next"];
174 -- 176
176 [label="ID : v_next"];
160 -- 177
177 [label="const : 1"];
147 -- 178
178 [label="Method: Insert"];
178 -- 179
179 [label="type : List"];
178 -- 180
180 [label="argument"];
180 -- 181
181 [label="type : Element"];
181 [label="ID : new_elem"];
178 -- 182
182 [label="Variable"];
182 -- 183
183 [label="Bool"];
183 [label="ID : ret_val"];
178 -- 184
184 [label="Variable"];
184 -- 185
185 [label="type : List"];
185 [label="ID : aux03"];
178 -- 186
186 [label="Variable"];
186 -- 187
187 [label="type : List"];
187 [label="ID : aux02"];
178 -- 188
188 [label="="];
188 -- 189
189 [label="lvalue : aux03"];
188 -- 190
190 [label="this : "];
178 -- 191
191 [label="="];
191 -- 192
192 [label="lvalue : aux02"];
191 -- 193
193 [label="new"];
193 [label="class : List"];
178 -- 194
194 [label="="];
194 -- 195
195 [label="lvalue : ret_val"];
194 -- 196
196 [label="call method"];
196 -- 197
197 [label="ID : aux02"];
197 [label="method : InitNew"];
196 -- 198
198 [label="ID : new_elem"];
196 -- 199
199 [label="ID : aux03"];
196 -- 200
200 [label="const : 0"];
178 -- 201
201 [label="ID : aux02"];
147 -- 202
202 [label="Method: SetNext"];
202 -- 203
203 [label="Bool"];
202 -- 204
204 [label="argument"];
204 -- 205
205 [label="type : List"];
205 [label="ID : v_next"];
202 -- 206
206 [label="="];
206 -- 207
207 [label="lvalue : next"];
206 -- 208
208 [label="ID : v_next"];
202 -- 209
209 [label="const : 1"];
147 -- 210
210 [label="Method: Delete"];
210 -- 211
211 [label="type : List"];
210 -- 212
212 [label="argument"];
212 -- 213
213 [label="type : Element"];
213 [label="ID : e"];
210 -- 214
214 [label="Variable"];
214 -- 215
215 [label="type : List"];
215 [label="ID : my_head"];
210 -- 216
216 [label="Variable"];
216 -- 217
217 [label="Bool"];
217 [label="ID : ret_val"];
210 -- 218
218 [label="Variable"];
218 -- 219
219 [label="Bool"];
219 [label="ID : aux05"];
210 -- 220
220 [label="Variable"];
220 -- 221
221 [label="type : List"];
221 [label="ID : aux01"];
210 -- 222
222 [label="Variable"];
222 -- 223
223 [label="type : List"];
223 [label="ID : prev"];
210 -- 224
224 [label="Variable"];
224 -- 225
225 [label="Bool"];
225 [label="ID : var_end"];
210 -- 226
226 [label="Variable"];
226 -- 227
227 [label="type : Element"];
227 [label="ID : var_elem"];
210 -- 228
228 [label="Variable"];
228 -- 229
229 [label="Int"];
229 [label="ID : aux04"];
210 -- 230
230 [label="Variable"];
230 -- 231
231 [label="Int"];
231 [label="ID : nt"];
210 -- 232
232 [label="="];
232 -- 233
233 [label="lvalue : my_head"];
232 -- 234
234 [label="this : "];
210 -- 235
235 [label="="];
235 -- 236
236 [label="lvalue : ret_val"];
235 -- 237
237 [label="const : 0"];
210 -- 238
238 [label="="];
238 -- 239
239 [label="lvalue : aux04"];
238 -- 240
240 [label="-"];
240 -- 241
241 [label="const : 0"];
240 -- 242
242 [label="const : 1"];
210 -- 243
243 [label="="];
243 -- 244
244 [label="lvalue : aux01"];
243 -- 245
245 [label="this : "];
210 -- 246
246 [label="="];
246 -- 247
247 [label="lvalue : prev"];
246 -- 248
248 [label="this : "];
210 -- 249
249 [label="="];
249 -- 250
250 [label="lvalue : var_end"];
249 -- 251
251 [label="ID : end"];
210 -- 252
252 [label="="];
252 -- 253
253 [label="lvalue : var_elem"];
252 -- 254
254 [label="ID : elem"];
210 -- 255
255 [label="while"];
255 -- 256
256 [label="AND"];
256 -- 257
257 [label="()"];
257 -- 258
258 [label="not"];
258 [label="-"];
258 -- 259
259 [label="ID : var_end"];
256 -- 260
260 [label="()"];
260 -- 261
261 [label="not"];
261 [label="-"];
261 -- 262
262 [label="ID : ret_val"];
255 -- 263
263 [label="{   }"];
263 -- 264
264 [label="if-then-else"];
264 -- 265
265 [label="call method"];
265 -- 266
266 [label="ID : e"];
266 [label="method : Equal"];
265 -- 267
267 [label="ID : var_elem"];
264 -- 268
268 [label="{   }"];
268 -- 269
269 [label="="];
269 -- 270
270 [label="lvalue : ret_val"];
269 -- 271
271 [label="const : 1"];
268 -- 272
272 [label="if-then-else"];
272 -- 273
273 [label="<"];
273 -- 274
274 [label="ID : aux04"];
273 -- 275
275 [label="const : 0"];
272 -- 276
276 [label="{   }"];
276 -- 277
277 [label="="];
277 -- 278
278 [label="lvalue : my_head"];
277 -- 279
279 [label="call method"];
279 -- 280
280 [label="ID : aux01"];
280 [label="method : GetNext"];
272 -- 281
281 [label="{   }"];
281 -- 282
282 [label="System.out.Println"];
282 -- 283
283 [label="-"];
283 -- 284
284 [label="const : 0"];
283 -- 285
285 [label="const : 555"];
281 -- 286
286 [label="="];
286 -- 287
287 [label="lvalue : aux05"];
286 -- 288
288 [label="call method"];
288 -- 289
289 [label="ID : prev"];
289 [label="method : SetNext"];
288 -- 290
290 [label="call method"];
290 -- 291
291 [label="ID : aux01"];
291 [label="method : GetNext"];
281 -- 292
292 [label="System.out.Println"];
292 -- 293
293 [label="-"];
293 -- 294
294 [label="const : 0"];
293 -- 295
295 [label="const : 555"];
264 -- 296
296 [label="="];
296 -- 297
297 [label="lvalue : nt"];
296 -- 298
298 [label="const : 0"];
263 -- 299
299 [label="if-then-else"];
299 -- 300
300 [label="not"];
300 [label="-"];
300 -- 301
301 [label="ID : ret_val"];
299 -- 302
302 [label="{   }"];
302 -- 303
303 [label="="];
303 -- 304
304 [label="lvalue : prev"];
303 -- 305
305 [label="ID : aux01"];
302 -- 306
306 [label="="];
306 -- 307
307 [label="lvalue : aux01"];
306 -- 308
308 [label="call method"];
308 -- 309
309 [label="ID : aux01"];
309 [label="method : GetNext"];
302 -- 310
310 [label="="];
310 -- 311
311 [label="lvalue : var_end"];
310 -- 312
312 [label="call method"];
312 -- 313
313 [label="ID : aux01"];
313 [label="method : GetEnd"];
302 -- 314
314 [label="="];
314 -- 315
315 [label="lvalue : var_elem"];
314 -- 316
316 [label="call method"];
316 -- 317
317 [label="ID : aux01"];
317 [label="method : GetElem"];
302 -- 318
318 [label="="];
318 -- 319
319 [label="lvalue : aux04"];
318 -- 320
320 [label="const : 1"];
299 -- 321
321 [label="="];
321 -- 322
322 [label="lvalue : nt"];
321 -- 323
323 [label="const : 0"];
210 -- 324
324 [label="ID : my_head"];
147 -- 325
325 [label="Method: Search"];
325 -- 326
326 [label="Int"];
325 -- 327
327 [label="argument"];
327 -- 328
328 [label="type : Element"];
328 [label="ID : e"];
325 -- 329
329 [label="Variable"];
329 -- 330
330 [label="Int"];
330 [label="ID : int_ret_val"];
325 -- 331
331 [label="Variable"];
331 -- 332
332 [label="type : List"];
332 [label="ID : aux01"];
325 -- 333
333 [label="Variable"];
333 -- 334
334 [label="type : Element"];
334 [label="ID : var_elem"];
325 -- 335
335 [label="Variable"];
335 -- 336
336 [label="Bool"];
336 [label="ID : var_end"];
325 -- 337
337 [label="Variable"];
337 -- 338
338 [label="Int"];
338 [label="ID : nt"];
325 -- 339
339 [label="="];
339 -- 340
340 [label="lvalue : int_ret_val"];
339 -- 341
341 [label="const : 0"];
325 -- 342
342 [label="="];
342 -- 343
343 [label="lvalue : aux01"];
342 -- 344
344 [label="this : "];
325 -- 345
345 [label="="];
345 -- 346
346 [label="lvalue : var_end"];
345 -- 347
347 [label="ID : end"];
325 -- 348
348 [label="="];
348 -- 349
349 [label="lvalue : var_elem"];
348 -- 350
350 [label="ID : elem"];
325 -- 351
351 [label="while"];
351 -- 352
352 [label="not"];
352 [label="-"];
352 -- 353
353 [label="ID : var_end"];
351 -- 354
354 [label="{   }"];
354 -- 355
355 [label="if-then-else"];
355 -- 356
356 [label="call method"];
356 -- 357
357 [label="ID : e"];
357 [label="method : Equal"];
356 -- 358
358 [label="ID : var_elem"];
355 -- 359
359 [label="{   }"];
359 -- 360
360 [label="="];
360 -- 361
361 [label="lvalue : int_ret_val"];
360 -- 362
362 [label="const : 1"];
355 -- 363
363 [label="="];
363 -- 364
364 [label="lvalue : nt"];
363 -- 365
365 [label="const : 0"];
354 -- 366
366 [label="="];
366 -- 367
367 [label="lvalue : aux01"];
366 -- 368
368 [label="call method"];
368 -- 369
369 [label="ID : aux01"];
369 [label="method : GetNext"];
354 -- 370
370 [label="="];
370 -- 371
371 [label="lvalue : var_end"];
370 -- 372
372 [label="call method"];
372 -- 373
373 [label="ID : aux01"];
373 [label="method : GetEnd"];
354 -- 374
374 [label="="];
374 -- 375
375 [label="lvalue : var_elem"];
374 -- 376
376 [label="call method"];
376 -- 377
377 [label="ID : aux01"];
377 [label="method : GetElem"];
325 -- 378
378 [label="ID : int_ret_val"];
147 -- 379
379 [label="Method: GetEnd"];
379 -- 380
380 [label="Bool"];
379 -- 381
381 [label="ID : end"];
147 -- 382
382 [label="Method: GetElem"];
382 -- 383
383 [label="type : Element"];
382 -- 384
384 [label="ID : elem"];
147 -- 385
385 [label="Method: GetNext"];
385 -- 386
386 [label="type : List"];
385 -- 387
387 [label="ID : next"];
147 -- 388
388 [label="Method: Print"];
388 -- 389
389 [label="Bool"];
388 -- 390
390 [label="Variable"];
390 -- 391
391 [label="type : List"];
391 [label="ID : aux01"];
388 -- 392
392 [label="Variable"];
392 -- 393
393 [label="Bool"];
393 [label="ID : var_end"];
388 -- 394
394 [label="Variable"];
394 -- 395
395 [label="type : Element"];
395 [label="ID : var_elem"];
388 -- 396
396 [label="="];
396 -- 397
397 [label="lvalue : aux01"];
396 -- 398
398 [label="this : "];
388 -- 399
399 [label="="];
399 -- 400
400 [label="lvalue : var_end"];
399 -- 401
401 [label="ID : end"];
388 -- 402
402 [label="="];
402 -- 403
403 [label="lvalue : var_elem"];
402 -- 404
404 [label="ID : elem"];
388 -- 405
405 [label="while"];
405 -- 406
406 [label="not"];
406 [label="-"];
406 -- 407
407 [label="ID : var_end"];
405 -- 408
408 [label="{   }"];
408 -- 409
409 [label="System.out.Println"];
409 -- 410
410 [label="call method"];
410 -- 411
411 [label="ID : var_elem"];
411 [label="method : GetAge"];
408 -- 412
412 [label="="];
412 -- 413
413 [label="lvalue : aux01"];
412 -- 414
414 [label="call method"];
414 -- 415
415 [label="ID : aux01"];
415 [label="method : GetNext"];
408 -- 416
416 [label="="];
416 -- 417
417 [label="lvalue : var_end"];
416 -- 418
418 [label="call method"];
418 -- 419
419 [label="ID : aux01"];
419 [label="method : GetEnd"];
408 -- 420
420 [label="="];
420 -- 421
421 [label="lvalue : var_elem"];
420 -- 422
422 [label="call method"];
422 -- 423
423 [label="ID : aux01"];
423 [label="method : GetElem"];
388 -- 424
424 [label="const : 1"];
0 -- 425
425 [label="ClassDeclaration: LL"];
425 -- 426
426 [label="Method: Start"];
426 -- 427
427 [label="Int"];
426 -- 428
428 [label="Variable"];
428 -- 429
429 [label="type : List"];
429 [label="ID : head"];
426 -- 430
430 [label="Variable"];
430 -- 431
431 [label="type : List"];
431 [label="ID : last_elem"];
426 -- 432
432 [label="Variable"];
432 -- 433
433 [label="Bool"];
433 [label="ID : aux01"];
426 -- 434
434 [label="Variable"];
434 -- 435
435 [label="type : Element"];
435 [label="ID : el01"];
426 -- 436
436 [label="Variable"];
436 -- 437
437 [label="type : Element"];
437 [label="ID : el02"];
426 -- 438
438 [label="Variable"];
438 -- 439
439 [label="type : Element"];
439 [label="ID : el03"];
426 -- 440
440 [label="="];
440 -- 441
441 [label="lvalue : last_elem"];
440 -- 442
442 [label="new"];
442 [label="class : List"];
426 -- 443
443 [label="="];
443 -- 444
444 [label="lvalue : aux01"];
443 -- 445
445 [label="call method"];
445 -- 446
446 [label="ID : last_elem"];
446 [label="method : Init"];
426 -- 447
447 [label="="];
447 -- 448
448 [label="lvalue : head"];
447 -- 449
449 [label="ID : last_elem"];
426 -- 450
450 [label="="];
450 -- 451
451 [label="lvalue : aux01"];
450 -- 452
452 [label="call method"];
452 -- 453
453 [label="ID : head"];
453 [label="method : Init"];
426 -- 454
454 [label="="];
454 -- 455
455 [label="lvalue : aux01"];
454 -- 456
456 [label="call method"];
456 -- 457
457 [label="ID : head"];
457 [label="method : Print"];
426 -- 458
458 [label="="];
458 -- 459
459 [label="lvalue : el01"];
458 -- 460
460 [label="new"];
460 [label="class : Element"];
426 -- 461
461 [label="="];
461 -- 462
462 [label="lvalue : aux01"];
461 -- 463
463 [label="call method"];
463 -- 464
464 [label="ID : el01"];
464 [label="method : Init"];
463 -- 465
465 [label="const : 25"];
463 -- 466
466 [label="const : 37000"];
463 -- 467
467 [label="const : 0"];
426 -- 468
468 [label="="];
468 -- 469
469 [label="lvalue : head"];
468 -- 470
470 [label="call method"];
470 -- 471
471 [label="ID : head"];
471 [label="method : Insert"];
470 -- 472
472 [label="ID : el01"];
426 -- 473
473 [label="="];
473 -- 474
474 [label="lvalue : aux01"];
473 -- 475
475 [label="call method"];
475 -- 476
476 [label="ID : head"];
476 [label="method : Print"];
426 -- 477
477 [label="System.out.Println"];
477 -- 478
478 [label="const : 10000000"];
426 -- 479
479 [label="="];
479 -- 480
480 [label="lvalue : el01"];
479 -- 481
481 [label="new"];
481 [label="class : Element"];
426 -- 482
482 [label="="];
482 -- 483
483 [label="lvalue : aux01"];
482 -- 484
484 [label="call method"];
484 -- 485
485 [label="ID : el01"];
485 [label="method : Init"];
484 -- 486
486 [label="const : 39"];
484 -- 487
487 [label="const : 42000"];
484 -- 488
488 [label="const : 1"];
426 -- 489
489 [label="="];
489 -- 490
490 [label="lvalue : el02"];
489 -- 491
491 [label="ID : el01"];
426 -- 492
492 [label="="];
492 -- 493
493 [label="lvalue : head"];
492 -- 494
494 [label="call method"];
494 -- 495
495 [label="ID : head"];
495 [label="method : Insert"];
494 -- 496
496 [label="ID : el01"];
426 -- 497
497 [label="="];
497 -- 498
498 [label="lvalue : aux01"];
497 -- 499
499 [label="call method"];
499 -- 500
500 [label="ID : head"];
500 [label="method : Print"];
426 -- 501
501 [label="System.out.Println"];
501 -- 502
502 [label="const : 10000000"];
426 -- 503
503 [label="="];
503 -- 504
504 [label="lvalue : el01"];
503 -- 505
505 [label="new"];
505 [label="class : Element"];
426 -- 506
506 [label="="];
506 -- 507
507 [label="lvalue : aux01"];
506 -- 508
508 [label="call method"];
508 -- 509
509 [label="ID : el01"];
509 [label="method : Init"];
508 -- 510
510 [label="const : 22"];
508 -- 511
511 [label="const : 34000"];
508 -- 512
512 [label="const : 0"];
426 -- 513
513 [label="="];
513 -- 514
514 [label="lvalue : head"];
513 -- 515
515 [label="call method"];
515 -- 516
516 [label="ID : head"];
516 [label="method : Insert"];
515 -- 517
517 [label="ID : el01"];
426 -- 518
518 [label="="];
518 -- 519
519 [label="lvalue : aux01"];
518 -- 520
520 [label="call method"];
520 -- 521
521 [label="ID : head"];
521 [label="method : Print"];
426 -- 522
522 [label="="];
522 -- 523
523 [label="lvalue : el03"];
522 -- 524
524 [label="new"];
524 [label="class : Element"];
426 -- 525
525 [label="="];
525 -- 526
526 [label="lvalue : aux01"];
525 -- 527
527 [label="call method"];
527 -- 528
528 [label="ID : el03"];
528 [label="method : Init"];
527 -- 529
529 [label="const : 27"];
527 -- 530
530 [label="const : 34000"];
527 -- 531
531 [label="const : 0"];
426 -- 532
532 [label="System.out.Println"];
532 -- 533
533 [label="call method"];
533 -- 534
534 [label="ID : head"];
534 [label="method : Search"];
533 -- 535
535 [label="ID : el02"];
426 -- 536
536 [label="System.out.Println"];
536 -- 537
537 [label="call method"];
537 -- 538
538 [label="ID : head"];
538 [label="method : Search"];
537 -- 539
539 [label="ID : el03"];
426 -- 540
540 [label="System.out.Println"];
540 -- 541
541 [label="const : 10000000"];
426 -- 542
542 [label="="];
542 -- 543
543 [label="lvalue : el01"];
542 -- 544
544 [label="new"];
544 [label="class : Element"];
426 -- 545
545 [label="="];
545 -- 546
546 [label="lvalue : aux01"];
545 -- 547
547 [label="call method"];
547 -- 548
548 [label="ID : el01"];
548 [label="method : Init"];
547 -- 549
549 [label="const : 28"];
547 -- 550
550 [label="const : 35000"];
547 -- 551
551 [label="const : 0"];
426 -- 552
552 [label="="];
552 -- 553
553 [label="lvalue : head"];
552 -- 554
554 [label="call method"];
554 -- 555
555 [label="ID : head"];
555 [label="method : Insert"];
554 -- 556
556 [label="ID : el01"];
426 -- 557
557 [label="="];
557 -- 558
558 [label="lvalue : aux01"];
557 -- 559
559 [label="call method"];
559 -- 560
560 [label="ID : head"];
560 [label="method : Print"];
426 -- 561
561 [label="System.out.Println"];
561 -- 562
562 [label="const : 2220000"];
426 -- 563
563 [label="="];
563 -- 564
564 [label="lvalue : head"];
563 -- 565
565 [label="call method"];
565 -- 566
566 [label="ID : head"];
566 [label="method : Delete"];
565 -- 567
567 [label="ID : el02"];
426 -- 568
568 [label="="];
568 -- 569
569 [label="lvalue : aux01"];
568 -- 570
570 [label="call method"];
570 -- 571
571 [label="ID : head"];
571 [label="method : Print"];
426 -- 572
572 [label="System.out.Println"];
572 -- 573
573 [label="const : 33300000"];
426 -- 574
574 [label="="];
574 -- 575
575 [label="lvalue : head"];
574 -- 576
576 [label="call method"];
576 -- 577
577 [label="ID : head"];
577 [label="method : Delete"];
576 -- 578
578 [label="ID : el01"];
426 -- 579
579 [label="="];
579 -- 580
580 [label="lvalue : aux01"];
579 -- 581
581 [label="call method"];
581 -- 582
582 [label="ID : head"];
582 [label="method : Print"];
426 -- 583
583 [label="System.out.Println"];
583 -- 584
584 [label="const : 44440000"];
426 -- 585
585 [label="const : 0"];
