strict graph {
0 [label="Program"];
0 -- 2
2 [label="MainClass:LinkedList"];
2 -- 3
3 [label="String[] : a"];
2 -- 4
4 [label="System.out.Println"];
4 -- 5
5 [label="call method"];
5 -- 6
6 [label="new"];
6 [label="class : LL"];
6 [label="method : Start"];
0 -- 7
7 [label="ClassDeclaration: Element"];
7 -- 8
8 [label="Variable"];
8 -- 9
9 [label="Int"];
9 [label="ID : Age"];
7 -- 10
10 [label="Variable"];
10 -- 11
11 [label="Int"];
11 [label="ID : Salary"];
7 -- 12
12 [label="Variable"];
12 -- 13
13 [label="Bool"];
13 [label="ID : Married"];
7 -- 14
14 [label="Method: Init"];
14 -- 15
15 [label="Bool"];
14 -- 16
16 [label="argument"];
16 -- 17
17 [label="Int"];
17 [label="ID : v_Age"];
14 -- 18
18 [label="argument"];
18 -- 19
19 [label="Int"];
19 [label="ID : v_Salary"];
14 -- 20
20 [label="argument"];
20 -- 21
21 [label="Bool"];
21 [label="ID : v_Married"];
14 -- 22
22 [label="="];
22 -- 23
23 [label="lvalue : Age"];
22 -- 24
24 [label="ID : v_Age"];
14 -- 25
25 [label="="];
25 -- 26
26 [label="lvalue : Salary"];
25 -- 27
27 [label="ID : v_Salary"];
14 -- 28
28 [label="="];
28 -- 29
29 [label="lvalue : Married"];
28 -- 30
30 [label="ID : v_Married"];
14 -- 31
31 [label="const : 1"];
7 -- 32
32 [label="Method: GetAge"];
32 -- 33
33 [label="Int"];
32 -- 34
34 [label="ID : Age"];
7 -- 35
35 [label="Method: GetSalary"];
35 -- 36
36 [label="Int"];
35 -- 37
37 [label="ID : Salary"];
7 -- 38
38 [label="Method: GetMarried"];
38 -- 39
39 [label="Bool"];
38 -- 40
40 [label="ID : Married"];
7 -- 41
41 [label="Method: Equal"];
41 -- 42
42 [label="Bool"];
41 -- 43
43 [label="argument"];
43 -- 44
44 [label="type : Element"];
44 [label="ID : other"];
41 -- 45
45 [label="Variable"];
45 -- 46
46 [label="Bool"];
46 [label="ID : ret_val"];
41 -- 47
47 [label="Variable"];
47 -- 48
48 [label="Int"];
48 [label="ID : aux01"];
41 -- 49
49 [label="Variable"];
49 -- 50
50 [label="Int"];
50 [label="ID : aux02"];
41 -- 51
51 [label="Variable"];
51 -- 52
52 [label="Int"];
52 [label="ID : nt"];
41 -- 53
53 [label="="];
53 -- 54
54 [label="lvalue : ret_val"];
53 -- 55
55 [label="const : 1"];
41 -- 56
56 [label="="];
56 -- 57
57 [label="lvalue : aux01"];
56 -- 58
58 [label="call method"];
58 -- 59
59 [label="ID : other"];
59 [label="method : GetAge"];
41 -- 60
60 [label="if-then-else"];
60 -- 61
61 [label="not"];
61 [label="-"];
61 -- 62
62 [label="()"];
62 -- 63
63 [label="call method"];
63 -- 64
64 [label="this : "];
64 [label="method : Compare"];
63 -- 65
65 [label="ID : aux01"];
63 -- 66
66 [label="ID : Age"];
60 -- 67
67 [label="="];
67 -- 68
68 [label="lvalue : ret_val"];
67 -- 69
69 [label="const : 0"];
60 -- 70
70 [label="{   }"];
70 -- 71
71 [label="="];
71 -- 72
72 [label="lvalue : aux02"];
71 -- 73
73 [label="call method"];
73 -- 74
74 [label="ID : other"];
74 [label="method : GetSalary"];
70 -- 75
75 [label="if-then-else"];
75 -- 76
76 [label="not"];
76 [label="-"];
76 -- 77
77 [label="call method"];
77 -- 78
78 [label="this : "];
78 [label="method : Compare"];
77 -- 79
79 [label="ID : aux02"];
77 -- 80
80 [label="ID : Salary"];
75 -- 81
81 [label="="];
81 -- 82
82 [label="lvalue : ret_val"];
81 -- 83
83 [label="const : 0"];
75 -- 84
84 [label="if-then-else"];
84 -- 85
85 [label="ID : Married"];
84 -- 86
86 [label="if-then-else"];
86 -- 87
87 [label="not"];
87 [label="-"];
87 -- 88
88 [label="call method"];
88 -- 89
89 [label="ID : other"];
89 [label="method : GetMarried"];
86 -- 90
90 [label="="];
90 -- 91
91 [label="lvalue : ret_val"];
90 -- 92
92 [label="const : 0"];
86 -- 93
93 [label="="];
93 -- 94
94 [label="lvalue : nt"];
93 -- 95
95 [label="const : 0"];
84 -- 96
96 [label="if-then-else"];
96 -- 97
97 [label="call method"];
97 -- 98
98 [label="ID : other"];
98 [label="method : GetMarried"];
96 -- 99
99 [label="="];
99 -- 100
100 [label="lvalue : ret_val"];
99 -- 101
101 [label="const : 0"];
96 -- 102
102 [label="="];
102 -- 103
103 [label="lvalue : nt"];
102 -- 104
104 [label="const : 0"];
41 -- 105
105 [label="ID : ret_val"];
7 -- 106
106 [label="Method: Compare"];
106 -- 107
107 [label="Bool"];
106 -- 108
108 [label="argument"];
108 -- 109
109 [label="Int"];
109 [label="ID : num1"];
106 -- 110
110 [label="argument"];
110 -- 111
111 [label="Int"];
111 [label="ID : num2"];
106 -- 112
112 [label="Variable"];
112 -- 113
113 [label="Bool"];
113 [label="ID : retval"];
106 -- 114
114 [label="Variable"];
114 -- 115
115 [label="Int"];
115 [label="ID : aux02"];
106 -- 116
116 [label="="];
116 -- 117
117 [label="lvalue : retval"];
116 -- 118
118 [label="const : 0"];
106 -- 119
119 [label="="];
119 -- 120
120 [label="lvalue : aux02"];
119 -- 121
121 [label="+"];
121 -- 122
122 [label="ID : num2"];
121 -- 123
123 [label="const : 1"];
106 -- 124
124 [label="if-then-else"];
124 -- 125
125 [label="<"];
125 -- 126
126 [label="ID : num1"];
125 -- 127
127 [label="ID : num2"];
124 -- 128
128 [label="="];
128 -- 129
129 [label="lvalue : retval"];
128 -- 130
130 [label="const : 0"];
124 -- 131
131 [label="if-then-else"];
131 -- 132
132 [label="not"];
132 [label="-"];
132 -- 133
133 [label="()"];
133 -- 134
134 [label="<"];
134 -- 135
135 [label="ID : num1"];
134 -- 136
136 [label="ID : aux02"];
131 -- 137
137 [label="="];
137 -- 138
138 [label="lvalue : retval"];
137 -- 139
139 [label="const : 0"];
131 -- 140
140 [label="="];
140 -- 141
141 [label="lvalue : retval"];
140 -- 142
142 [label="const : 1"];
106 -- 143
143 [label="ID : retval"];
0 -- 144
144 [label="ClassDeclaration: List"];
144 -- 145
145 [label="Variable"];
145 -- 146
146 [label="type : Element"];
146 [label="ID : elem"];
144 -- 147
147 [label="Variable"];
147 -- 148
148 [label="type : List"];
148 [label="ID : next"];
144 -- 149
149 [label="Variable"];
149 -- 150
150 [label="Bool"];
150 [label="ID : end"];
144 -- 151
151 [label="Method: Init"];
151 -- 152
152 [label="Bool"];
151 -- 153
153 [label="="];
153 -- 154
154 [label="lvalue : end"];
153 -- 155
155 [label="const : 1"];
151 -- 156
156 [label="const : 1"];
144 -- 157
157 [label="Method: InitNew"];
157 -- 158
158 [label="Bool"];
157 -- 159
159 [label="argument"];
159 -- 160
160 [label="type : Element"];
160 [label="ID : v_elem"];
157 -- 161
161 [label="argument"];
161 -- 162
162 [label="type : List"];
162 [label="ID : v_next"];
157 -- 163
163 [label="argument"];
163 -- 164
164 [label="Bool"];
164 [label="ID : v_end"];
157 -- 165
165 [label="="];
165 -- 166
166 [label="lvalue : end"];
165 -- 167
167 [label="ID : v_end"];
157 -- 168
168 [label="="];
168 -- 169
169 [label="lvalue : elem"];
168 -- 170
170 [label="ID : v_elem"];
157 -- 171
171 [label="="];
171 -- 172
172 [label="lvalue : next"];
171 -- 173
173 [label="ID : v_next"];
157 -- 174
174 [label="const : 1"];
144 -- 175
175 [label="Method: Insert"];
175 -- 176
176 [label="type : List"];
175 -- 177
177 [label="argument"];
177 -- 178
178 [label="type : Element"];
178 [label="ID : new_elem"];
175 -- 179
179 [label="Variable"];
179 -- 180
180 [label="Bool"];
180 [label="ID : ret_val"];
175 -- 181
181 [label="Variable"];
181 -- 182
182 [label="type : List"];
182 [label="ID : aux03"];
175 -- 183
183 [label="Variable"];
183 -- 184
184 [label="type : List"];
184 [label="ID : aux02"];
175 -- 185
185 [label="="];
185 -- 186
186 [label="lvalue : aux03"];
185 -- 187
187 [label="this : "];
175 -- 188
188 [label="="];
188 -- 189
189 [label="lvalue : aux02"];
188 -- 190
190 [label="new"];
190 [label="class : List"];
175 -- 191
191 [label="="];
191 -- 192
192 [label="lvalue : ret_val"];
191 -- 193
193 [label="call method"];
193 -- 194
194 [label="ID : aux02"];
194 [label="method : InitNew"];
193 -- 195
195 [label="ID : new_elem"];
193 -- 196
196 [label="ID : aux03"];
193 -- 197
197 [label="const : 0"];
175 -- 198
198 [label="ID : aux02"];
144 -- 199
199 [label="Method: SetNext"];
199 -- 200
200 [label="Bool"];
199 -- 201
201 [label="argument"];
201 -- 202
202 [label="type : List"];
202 [label="ID : v_next"];
199 -- 203
203 [label="="];
203 -- 204
204 [label="lvalue : next"];
203 -- 205
205 [label="ID : v_next"];
199 -- 206
206 [label="const : 1"];
144 -- 207
207 [label="Method: Delete"];
207 -- 208
208 [label="type : List"];
207 -- 209
209 [label="argument"];
209 -- 210
210 [label="type : Element"];
210 [label="ID : e"];
207 -- 211
211 [label="Variable"];
211 -- 212
212 [label="type : List"];
212 [label="ID : my_head"];
207 -- 213
213 [label="Variable"];
213 -- 214
214 [label="Bool"];
214 [label="ID : ret_val"];
207 -- 215
215 [label="Variable"];
215 -- 216
216 [label="Bool"];
216 [label="ID : aux05"];
207 -- 217
217 [label="Variable"];
217 -- 218
218 [label="type : List"];
218 [label="ID : aux01"];
207 -- 219
219 [label="Variable"];
219 -- 220
220 [label="type : List"];
220 [label="ID : prev"];
207 -- 221
221 [label="Variable"];
221 -- 222
222 [label="Bool"];
222 [label="ID : var_end"];
207 -- 223
223 [label="Variable"];
223 -- 224
224 [label="type : Element"];
224 [label="ID : var_elem"];
207 -- 225
225 [label="Variable"];
225 -- 226
226 [label="Int"];
226 [label="ID : aux04"];
207 -- 227
227 [label="Variable"];
227 -- 228
228 [label="Int"];
228 [label="ID : nt"];
207 -- 229
229 [label="="];
229 -- 230
230 [label="lvalue : my_head"];
229 -- 231
231 [label="this : "];
207 -- 232
232 [label="="];
232 -- 233
233 [label="lvalue : ret_val"];
232 -- 234
234 [label="const : 0"];
207 -- 235
235 [label="="];
235 -- 236
236 [label="lvalue : aux04"];
235 -- 237
237 [label="-"];
237 -- 238
238 [label="const : 0"];
237 -- 239
239 [label="const : 1"];
207 -- 240
240 [label="="];
240 -- 241
241 [label="lvalue : aux01"];
240 -- 242
242 [label="this : "];
207 -- 243
243 [label="="];
243 -- 244
244 [label="lvalue : prev"];
243 -- 245
245 [label="this : "];
207 -- 246
246 [label="="];
246 -- 247
247 [label="lvalue : var_end"];
246 -- 248
248 [label="ID : end"];
207 -- 249
249 [label="="];
249 -- 250
250 [label="lvalue : var_elem"];
249 -- 251
251 [label="ID : elem"];
207 -- 252
252 [label="while"];
252 -- 253
253 [label="AND"];
253 -- 254
254 [label="()"];
254 -- 255
255 [label="not"];
255 [label="-"];
255 -- 256
256 [label="ID : var_end"];
253 -- 257
257 [label="()"];
257 -- 258
258 [label="not"];
258 [label="-"];
258 -- 259
259 [label="ID : ret_val"];
252 -- 260
260 [label="{   }"];
260 -- 261
261 [label="if-then-else"];
261 -- 262
262 [label="call method"];
262 -- 263
263 [label="ID : e"];
263 [label="method : Equal"];
262 -- 264
264 [label="ID : var_elem"];
261 -- 265
265 [label="{   }"];
265 -- 266
266 [label="="];
266 -- 267
267 [label="lvalue : ret_val"];
266 -- 268
268 [label="const : 1"];
265 -- 269
269 [label="if-then-else"];
269 -- 270
270 [label="<"];
270 -- 271
271 [label="ID : aux04"];
270 -- 272
272 [label="const : 0"];
269 -- 273
273 [label="{   }"];
273 -- 274
274 [label="="];
274 -- 275
275 [label="lvalue : my_head"];
274 -- 276
276 [label="call method"];
276 -- 277
277 [label="ID : aux01"];
277 [label="method : GetNext"];
269 -- 278
278 [label="{   }"];
278 -- 279
279 [label="System.out.Println"];
279 -- 280
280 [label="-"];
280 -- 281
281 [label="const : 0"];
280 -- 282
282 [label="const : 555"];
278 -- 283
283 [label="="];
283 -- 284
284 [label="lvalue : aux05"];
283 -- 285
285 [label="call method"];
285 -- 286
286 [label="ID : prev"];
286 [label="method : SetNext"];
285 -- 287
287 [label="call method"];
287 -- 288
288 [label="ID : aux01"];
288 [label="method : GetNext"];
278 -- 289
289 [label="System.out.Println"];
289 -- 290
290 [label="-"];
290 -- 291
291 [label="const : 0"];
290 -- 292
292 [label="const : 555"];
261 -- 293
293 [label="="];
293 -- 294
294 [label="lvalue : nt"];
293 -- 295
295 [label="const : 0"];
260 -- 296
296 [label="if-then-else"];
296 -- 297
297 [label="not"];
297 [label="-"];
297 -- 298
298 [label="ID : ret_val"];
296 -- 299
299 [label="{   }"];
299 -- 300
300 [label="="];
300 -- 301
301 [label="lvalue : prev"];
300 -- 302
302 [label="ID : aux01"];
299 -- 303
303 [label="="];
303 -- 304
304 [label="lvalue : aux01"];
303 -- 305
305 [label="call method"];
305 -- 306
306 [label="ID : aux01"];
306 [label="method : GetNext"];
299 -- 307
307 [label="="];
307 -- 308
308 [label="lvalue : var_end"];
307 -- 309
309 [label="call method"];
309 -- 310
310 [label="ID : aux01"];
310 [label="method : GetEnd"];
299 -- 311
311 [label="="];
311 -- 312
312 [label="lvalue : var_elem"];
311 -- 313
313 [label="call method"];
313 -- 314
314 [label="ID : aux01"];
314 [label="method : GetElem"];
299 -- 315
315 [label="="];
315 -- 316
316 [label="lvalue : aux04"];
315 -- 317
317 [label="const : 1"];
296 -- 318
318 [label="="];
318 -- 319
319 [label="lvalue : nt"];
318 -- 320
320 [label="const : 0"];
207 -- 321
321 [label="ID : my_head"];
144 -- 322
322 [label="Method: Search"];
322 -- 323
323 [label="Int"];
322 -- 324
324 [label="argument"];
324 -- 325
325 [label="type : Element"];
325 [label="ID : e"];
322 -- 326
326 [label="Variable"];
326 -- 327
327 [label="Int"];
327 [label="ID : int_ret_val"];
322 -- 328
328 [label="Variable"];
328 -- 329
329 [label="type : List"];
329 [label="ID : aux01"];
322 -- 330
330 [label="Variable"];
330 -- 331
331 [label="type : Element"];
331 [label="ID : var_elem"];
322 -- 332
332 [label="Variable"];
332 -- 333
333 [label="Bool"];
333 [label="ID : var_end"];
322 -- 334
334 [label="Variable"];
334 -- 335
335 [label="Int"];
335 [label="ID : nt"];
322 -- 336
336 [label="="];
336 -- 337
337 [label="lvalue : int_ret_val"];
336 -- 338
338 [label="const : 0"];
322 -- 339
339 [label="="];
339 -- 340
340 [label="lvalue : aux01"];
339 -- 341
341 [label="this : "];
322 -- 342
342 [label="="];
342 -- 343
343 [label="lvalue : var_end"];
342 -- 344
344 [label="ID : end"];
322 -- 345
345 [label="="];
345 -- 346
346 [label="lvalue : var_elem"];
345 -- 347
347 [label="ID : elem"];
322 -- 348
348 [label="while"];
348 -- 349
349 [label="not"];
349 [label="-"];
349 -- 350
350 [label="ID : var_end"];
348 -- 351
351 [label="{   }"];
351 -- 352
352 [label="if-then-else"];
352 -- 353
353 [label="call method"];
353 -- 354
354 [label="ID : e"];
354 [label="method : Equal"];
353 -- 355
355 [label="ID : var_elem"];
352 -- 356
356 [label="{   }"];
356 -- 357
357 [label="="];
357 -- 358
358 [label="lvalue : int_ret_val"];
357 -- 359
359 [label="const : 1"];
352 -- 360
360 [label="="];
360 -- 361
361 [label="lvalue : nt"];
360 -- 362
362 [label="const : 0"];
351 -- 363
363 [label="="];
363 -- 364
364 [label="lvalue : aux01"];
363 -- 365
365 [label="call method"];
365 -- 366
366 [label="ID : aux01"];
366 [label="method : GetNext"];
351 -- 367
367 [label="="];
367 -- 368
368 [label="lvalue : var_end"];
367 -- 369
369 [label="call method"];
369 -- 370
370 [label="ID : aux01"];
370 [label="method : GetEnd"];
351 -- 371
371 [label="="];
371 -- 372
372 [label="lvalue : var_elem"];
371 -- 373
373 [label="call method"];
373 -- 374
374 [label="ID : aux01"];
374 [label="method : GetElem"];
322 -- 375
375 [label="ID : int_ret_val"];
144 -- 376
376 [label="Method: GetEnd"];
376 -- 377
377 [label="Bool"];
376 -- 378
378 [label="ID : end"];
144 -- 379
379 [label="Method: GetElem"];
379 -- 380
380 [label="type : Element"];
379 -- 381
381 [label="ID : elem"];
144 -- 382
382 [label="Method: GetNext"];
382 -- 383
383 [label="type : List"];
382 -- 384
384 [label="ID : next"];
144 -- 385
385 [label="Method: Print"];
385 -- 386
386 [label="Bool"];
385 -- 387
387 [label="Variable"];
387 -- 388
388 [label="type : List"];
388 [label="ID : aux01"];
385 -- 389
389 [label="Variable"];
389 -- 390
390 [label="Bool"];
390 [label="ID : var_end"];
385 -- 391
391 [label="Variable"];
391 -- 392
392 [label="type : Element"];
392 [label="ID : var_elem"];
385 -- 393
393 [label="="];
393 -- 394
394 [label="lvalue : aux01"];
393 -- 395
395 [label="this : "];
385 -- 396
396 [label="="];
396 -- 397
397 [label="lvalue : var_end"];
396 -- 398
398 [label="ID : end"];
385 -- 399
399 [label="="];
399 -- 400
400 [label="lvalue : var_elem"];
399 -- 401
401 [label="ID : elem"];
385 -- 402
402 [label="while"];
402 -- 403
403 [label="not"];
403 [label="-"];
403 -- 404
404 [label="ID : var_end"];
402 -- 405
405 [label="{   }"];
405 -- 406
406 [label="System.out.Println"];
406 -- 407
407 [label="call method"];
407 -- 408
408 [label="ID : var_elem"];
408 [label="method : GetAge"];
405 -- 409
409 [label="="];
409 -- 410
410 [label="lvalue : aux01"];
409 -- 411
411 [label="call method"];
411 -- 412
412 [label="ID : aux01"];
412 [label="method : GetNext"];
405 -- 413
413 [label="="];
413 -- 414
414 [label="lvalue : var_end"];
413 -- 415
415 [label="call method"];
415 -- 416
416 [label="ID : aux01"];
416 [label="method : GetEnd"];
405 -- 417
417 [label="="];
417 -- 418
418 [label="lvalue : var_elem"];
417 -- 419
419 [label="call method"];
419 -- 420
420 [label="ID : aux01"];
420 [label="method : GetElem"];
385 -- 421
421 [label="const : 1"];
0 -- 422
422 [label="ClassDeclaration: LL"];
422 -- 423
423 [label="Method: Start"];
423 -- 424
424 [label="Int"];
423 -- 425
425 [label="Variable"];
425 -- 426
426 [label="type : List"];
426 [label="ID : head"];
423 -- 427
427 [label="Variable"];
427 -- 428
428 [label="type : List"];
428 [label="ID : last_elem"];
423 -- 429
429 [label="Variable"];
429 -- 430
430 [label="Bool"];
430 [label="ID : aux01"];
423 -- 431
431 [label="Variable"];
431 -- 432
432 [label="type : Element"];
432 [label="ID : el01"];
423 -- 433
433 [label="Variable"];
433 -- 434
434 [label="type : Element"];
434 [label="ID : el02"];
423 -- 435
435 [label="Variable"];
435 -- 436
436 [label="type : Element"];
436 [label="ID : el03"];
423 -- 437
437 [label="="];
437 -- 438
438 [label="lvalue : last_elem"];
437 -- 439
439 [label="new"];
439 [label="class : List"];
423 -- 440
440 [label="="];
440 -- 441
441 [label="lvalue : aux01"];
440 -- 442
442 [label="call method"];
442 -- 443
443 [label="ID : last_elem"];
443 [label="method : Init"];
423 -- 444
444 [label="="];
444 -- 445
445 [label="lvalue : head"];
444 -- 446
446 [label="ID : last_elem"];
423 -- 447
447 [label="="];
447 -- 448
448 [label="lvalue : aux01"];
447 -- 449
449 [label="call method"];
449 -- 450
450 [label="ID : head"];
450 [label="method : Init"];
423 -- 451
451 [label="="];
451 -- 452
452 [label="lvalue : aux01"];
451 -- 453
453 [label="call method"];
453 -- 454
454 [label="ID : head"];
454 [label="method : Print"];
423 -- 455
455 [label="="];
455 -- 456
456 [label="lvalue : el01"];
455 -- 457
457 [label="new"];
457 [label="class : Element"];
423 -- 458
458 [label="="];
458 -- 459
459 [label="lvalue : aux01"];
458 -- 460
460 [label="call method"];
460 -- 461
461 [label="ID : el01"];
461 [label="method : Init"];
460 -- 462
462 [label="const : 25"];
460 -- 463
463 [label="const : 37000"];
460 -- 464
464 [label="const : 0"];
423 -- 465
465 [label="="];
465 -- 466
466 [label="lvalue : head"];
465 -- 467
467 [label="call method"];
467 -- 468
468 [label="ID : head"];
468 [label="method : Insert"];
467 -- 469
469 [label="ID : el01"];
423 -- 470
470 [label="="];
470 -- 471
471 [label="lvalue : aux01"];
470 -- 472
472 [label="call method"];
472 -- 473
473 [label="ID : head"];
473 [label="method : Print"];
423 -- 474
474 [label="System.out.Println"];
474 -- 475
475 [label="const : 10000000"];
423 -- 476
476 [label="="];
476 -- 477
477 [label="lvalue : el01"];
476 -- 478
478 [label="new"];
478 [label="class : Element"];
423 -- 479
479 [label="="];
479 -- 480
480 [label="lvalue : aux01"];
479 -- 481
481 [label="call method"];
481 -- 482
482 [label="ID : el01"];
482 [label="method : Init"];
481 -- 483
483 [label="const : 39"];
481 -- 484
484 [label="const : 42000"];
481 -- 485
485 [label="const : 1"];
423 -- 486
486 [label="="];
486 -- 487
487 [label="lvalue : el02"];
486 -- 488
488 [label="ID : el01"];
423 -- 489
489 [label="="];
489 -- 490
490 [label="lvalue : head"];
489 -- 491
491 [label="call method"];
491 -- 492
492 [label="ID : head"];
492 [label="method : Insert"];
491 -- 493
493 [label="ID : el01"];
423 -- 494
494 [label="="];
494 -- 495
495 [label="lvalue : aux01"];
494 -- 496
496 [label="call method"];
496 -- 497
497 [label="ID : head"];
497 [label="method : Print"];
423 -- 498
498 [label="System.out.Println"];
498 -- 499
499 [label="const : 10000000"];
423 -- 500
500 [label="="];
500 -- 501
501 [label="lvalue : el01"];
500 -- 502
502 [label="new"];
502 [label="class : Element"];
423 -- 503
503 [label="="];
503 -- 504
504 [label="lvalue : aux01"];
503 -- 505
505 [label="call method"];
505 -- 506
506 [label="ID : el01"];
506 [label="method : Init"];
505 -- 507
507 [label="const : 22"];
505 -- 508
508 [label="const : 34000"];
505 -- 509
509 [label="const : 0"];
423 -- 510
510 [label="="];
510 -- 511
511 [label="lvalue : head"];
510 -- 512
512 [label="call method"];
512 -- 513
513 [label="ID : head"];
513 [label="method : Insert"];
512 -- 514
514 [label="ID : el01"];
423 -- 515
515 [label="="];
515 -- 516
516 [label="lvalue : aux01"];
515 -- 517
517 [label="call method"];
517 -- 518
518 [label="ID : head"];
518 [label="method : Print"];
423 -- 519
519 [label="="];
519 -- 520
520 [label="lvalue : el03"];
519 -- 521
521 [label="new"];
521 [label="class : Element"];
423 -- 522
522 [label="="];
522 -- 523
523 [label="lvalue : aux01"];
522 -- 524
524 [label="call method"];
524 -- 525
525 [label="ID : el03"];
525 [label="method : Init"];
524 -- 526
526 [label="const : 27"];
524 -- 527
527 [label="const : 34000"];
524 -- 528
528 [label="const : 0"];
423 -- 529
529 [label="System.out.Println"];
529 -- 530
530 [label="call method"];
530 -- 531
531 [label="ID : head"];
531 [label="method : Search"];
530 -- 532
532 [label="ID : el02"];
423 -- 533
533 [label="System.out.Println"];
533 -- 534
534 [label="call method"];
534 -- 535
535 [label="ID : head"];
535 [label="method : Search"];
534 -- 536
536 [label="ID : el03"];
423 -- 537
537 [label="System.out.Println"];
537 -- 538
538 [label="const : 10000000"];
423 -- 539
539 [label="="];
539 -- 540
540 [label="lvalue : el01"];
539 -- 541
541 [label="new"];
541 [label="class : Element"];
423 -- 542
542 [label="="];
542 -- 543
543 [label="lvalue : aux01"];
542 -- 544
544 [label="call method"];
544 -- 545
545 [label="ID : el01"];
545 [label="method : Init"];
544 -- 546
546 [label="const : 28"];
544 -- 547
547 [label="const : 35000"];
544 -- 548
548 [label="const : 0"];
423 -- 549
549 [label="="];
549 -- 550
550 [label="lvalue : head"];
549 -- 551
551 [label="call method"];
551 -- 552
552 [label="ID : head"];
552 [label="method : Insert"];
551 -- 553
553 [label="ID : el01"];
423 -- 554
554 [label="="];
554 -- 555
555 [label="lvalue : aux01"];
554 -- 556
556 [label="call method"];
556 -- 557
557 [label="ID : head"];
557 [label="method : Print"];
423 -- 558
558 [label="System.out.Println"];
558 -- 559
559 [label="const : 2220000"];
423 -- 560
560 [label="="];
560 -- 561
561 [label="lvalue : head"];
560 -- 562
562 [label="call method"];
562 -- 563
563 [label="ID : head"];
563 [label="method : Delete"];
562 -- 564
564 [label="ID : el02"];
423 -- 565
565 [label="="];
565 -- 566
566 [label="lvalue : aux01"];
565 -- 567
567 [label="call method"];
567 -- 568
568 [label="ID : head"];
568 [label="method : Print"];
423 -- 569
569 [label="System.out.Println"];
569 -- 570
570 [label="const : 33300000"];
423 -- 571
571 [label="="];
571 -- 572
572 [label="lvalue : head"];
571 -- 573
573 [label="call method"];
573 -- 574
574 [label="ID : head"];
574 [label="method : Delete"];
573 -- 575
575 [label="ID : el01"];
423 -- 576
576 [label="="];
576 -- 577
577 [label="lvalue : aux01"];
576 -- 578
578 [label="call method"];
578 -- 579
579 [label="ID : head"];
579 [label="method : Print"];
423 -- 580
580 [label="System.out.Println"];
580 -- 581
581 [label="const : 44440000"];
423 -- 582
582 [label="const : 0"];
}
